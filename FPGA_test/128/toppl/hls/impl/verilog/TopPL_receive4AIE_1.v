// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TopPL_receive4AIE_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        return_r,
        receive_fifo_0_din,
        receive_fifo_0_num_data_valid,
        receive_fifo_0_fifo_cap,
        receive_fifo_0_full_n,
        receive_fifo_0_write,
        sweep_rx0_0_TDATA,
        sweep_rx0_0_TVALID,
        sweep_rx0_0_TREADY,
        sweep_rx0_0_TKEEP,
        sweep_rx0_0_TSTRB,
        sweep_rx0_0_TLAST
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] return_r;
output  [127:0] receive_fifo_0_din;
input  [12:0] receive_fifo_0_num_data_valid;
input  [12:0] receive_fifo_0_fifo_cap;
input   receive_fifo_0_full_n;
output   receive_fifo_0_write;
input  [127:0] sweep_rx0_0_TDATA;
input   sweep_rx0_0_TVALID;
output   sweep_rx0_0_TREADY;
input  [15:0] sweep_rx0_0_TKEEP;
input  [15:0] sweep_rx0_0_TSTRB;
input  [0:0] sweep_rx0_0_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] return_r;
reg[127:0] receive_fifo_0_din;
reg receive_fifo_0_write;
reg sweep_rx0_0_TREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    receive_fifo_0_blk_n;
wire    ap_CS_fsm_state6;
reg    sweep_rx0_0_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln69_fu_269_p2;
wire    ap_CS_fsm_state5;
wire   [127:0] data_temp_14_fu_291_p5;
reg   [127:0] data_temp_14_reg_692;
reg    ap_block_state2;
wire   [31:0] trunc_ln86_fu_319_p1;
reg   [31:0] trunc_ln86_reg_706;
wire   [31:0] bitcast_ln88_fu_333_p1;
wire   [63:0] grp_fu_179_p1;
reg   [63:0] dc_reg_717;
wire   [63:0] grp_fu_182_p1;
reg   [63:0] dc_3_reg_724;
wire   [0:0] x_fp_sign_fu_375_p3;
reg   [0:0] x_fp_sign_reg_731;
wire    ap_CS_fsm_state7;
wire   [51:0] x_fp_sig_1_fu_393_p1;
reg   [51:0] x_fp_sig_1_reg_736;
wire   [0:0] icmp_ln25_fu_428_p2;
reg   [0:0] icmp_ln25_reg_741;
wire   [0:0] icmp_ln25_1_fu_440_p2;
reg   [0:0] icmp_ln25_1_reg_747;
wire   [0:0] icmp_ln18_fu_446_p2;
reg   [0:0] icmp_ln18_reg_753;
wire   [0:0] icmp_ln18_1_fu_452_p2;
reg   [0:0] icmp_ln18_1_reg_760;
wire   [0:0] icmp_ln18_2_fu_458_p2;
reg   [0:0] icmp_ln18_2_reg_766;
wire   [0:0] icmp_ln18_3_fu_464_p2;
reg   [0:0] icmp_ln18_3_reg_772;
wire   [0:0] ymaggreater_1_fu_490_p3;
reg   [0:0] ymaggreater_1_reg_778;
wire   [0:0] and_ln18_fu_502_p2;
reg   [0:0] and_ln18_reg_783;
wire    ap_CS_fsm_state8;
wire   [0:0] xor_ln25_fu_537_p2;
reg   [0:0] xor_ln25_reg_788;
wire   [63:0] res_3_fu_600_p3;
reg   [63:0] res_3_reg_793;
wire   [31:0] conv_1_fu_176_p1;
reg   [31:0] conv_1_reg_798;
wire    ap_CS_fsm_state9;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_done;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_idle;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_ready;
wire   [127:0] grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_din;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_write;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_sweep_rx0_0_TREADY;
wire   [127:0] grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_13_out;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_13_out_ap_vld;
wire   [127:0] grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_12_out_o;
wire    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_12_out_o_ap_vld;
reg    grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [127:0] data_temp_fu_120;
reg   [31:0] conv_fu_112;
wire    ap_CS_fsm_state10;
reg    ap_block_state1;
reg   [3:0] i_04_fu_116;
wire   [3:0] i_9_fu_263_p2;
reg   [127:0] data_temp_9_fu_124;
wire   [127:0] data_temp_15_fu_347_p5;
reg   [31:0] return_r_preg;
wire   [63:0] conv_1_fu_176_p0;
reg   [31:0] grp_fu_179_p0;
reg   [31:0] grp_fu_182_p0;
wire   [95:0] tmp_fu_281_p4;
wire   [31:0] fp_uint_tmp_fu_323_p4;
wire   [63:0] data_fu_372_p1;
wire   [63:0] data_2_fu_397_p1;
wire   [10:0] y_fp_exp_fu_408_p4;
wire   [10:0] x_fp_exp_fu_383_p4;
wire   [10:0] or_ln25_fu_422_p2;
wire   [51:0] y_fp_sig_fu_418_p1;
wire   [51:0] or_ln25_1_fu_434_p2;
wire   [0:0] ymaggreater_fu_470_p2;
wire   [0:0] xor_ln39_fu_476_p2;
wire   [0:0] y_fp_sign_fu_400_p3;
wire   [0:0] select_ln39_fu_482_p3;
wire   [51:0] x_fp_sig_fu_511_p4;
wire   [63:0] t_fu_520_p4;
wire   [0:0] and_ln25_1_fu_533_p2;
wire   [0:0] xor_ln18_fu_543_p2;
wire   [0:0] and_ln18_2_fu_553_p2;
wire   [0:0] and_ln18_1_fu_548_p2;
wire   [0:0] and_ln18_3_fu_559_p2;
wire   [63:0] res_1_fu_529_p1;
wire   [63:0] res_fu_506_p3;
wire   [0:0] and_ln18_4_fu_573_p2;
wire   [0:0] xor_ln18_1_fu_577_p2;
wire   [0:0] and_ln18_5_fu_583_p2;
wire   [0:0] and_ln25_fu_498_p2;
wire   [0:0] and_ln18_6_fu_589_p2;
wire   [0:0] or_ln18_fu_594_p2;
wire   [63:0] res_2_fu_565_p3;
wire   [0:0] xor_ln18_2_fu_607_p2;
wire   [0:0] or_ln18_1_fu_612_p2;
wire   [0:0] and_ln18_7_fu_617_p2;
wire   [0:0] and_ln18_8_fu_622_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start_reg = 1'b0;
#0 data_temp_fu_120 = 128'd0;
#0 conv_fu_112 = 32'd0;
#0 i_04_fu_116 = 4'd0;
#0 data_temp_9_fu_124 = 128'd0;
#0 return_r_preg = 32'd0;
end

TopPL_receive4AIE_1_Pipeline_VITIS_LOOP_76_2 grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start),
    .ap_done(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_done),
    .ap_idle(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_idle),
    .ap_ready(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_ready),
    .sweep_rx0_0_TVALID(sweep_rx0_0_TVALID),
    .receive_fifo_0_din(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_din),
    .receive_fifo_0_num_data_valid(13'd0),
    .receive_fifo_0_fifo_cap(13'd0),
    .receive_fifo_0_full_n(receive_fifo_0_full_n),
    .receive_fifo_0_write(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_write),
    .data_temp_9(data_temp_9_fu_124),
    .data_temp_10(data_temp_14_reg_692),
    .sweep_rx0_0_TDATA(sweep_rx0_0_TDATA),
    .sweep_rx0_0_TREADY(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_sweep_rx0_0_TREADY),
    .sweep_rx0_0_TKEEP(sweep_rx0_0_TKEEP),
    .sweep_rx0_0_TSTRB(sweep_rx0_0_TSTRB),
    .sweep_rx0_0_TLAST(sweep_rx0_0_TLAST),
    .data_temp_13_out(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_13_out),
    .data_temp_13_out_ap_vld(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_13_out_ap_vld),
    .data_temp_12_out_i(data_temp_fu_120),
    .data_temp_12_out_o(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_12_out_o),
    .data_temp_12_out_o_ap_vld(grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_12_out_o_ap_vld)
);

TopPL_fptrunc_64ns_32_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_1_no_dsp_1_U153(
    .din0(conv_1_fu_176_p0),
    .dout(conv_1_fu_176_p1)
);

TopPL_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U154(
    .din0(grp_fu_179_p0),
    .dout(grp_fu_179_p1)
);

TopPL_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U155(
    .din0(grp_fu_182_p0),
    .dout(grp_fu_182_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start_reg <= 1'b1;
        end else if ((grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_ready == 1'b1)) begin
            grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        return_r_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            return_r_preg <= conv_fu_112;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_fu_112 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_fu_112 <= conv_1_reg_798;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_temp_9_fu_124 <= 128'd0;
    end else if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        data_temp_9_fu_124 <= data_temp_15_fu_347_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_temp_fu_120 <= 128'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_12_out_o_ap_vld == 1'b1))) begin
        data_temp_fu_120 <= grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_12_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_04_fu_116 <= 4'd0;
    end else if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_04_fu_116 <= i_9_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        and_ln18_reg_783 <= and_ln18_fu_502_p2;
        res_3_reg_793 <= res_3_fu_600_p3;
        xor_ln25_reg_788 <= xor_ln25_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_1_reg_798 <= conv_1_fu_176_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2))) begin
        data_temp_14_reg_692 <= data_temp_14_fu_291_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        dc_3_reg_724 <= grp_fu_182_p1;
        dc_reg_717 <= grp_fu_179_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((sweep_rx0_0_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_179_p0 <= conv_fu_112;
        grp_fu_182_p0 <= bitcast_ln88_fu_333_p1;
        trunc_ln86_reg_706 <= trunc_ln86_fu_319_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln18_1_reg_760 <= icmp_ln18_1_fu_452_p2;
        icmp_ln18_2_reg_766 <= icmp_ln18_2_fu_458_p2;
        icmp_ln18_3_reg_772 <= icmp_ln18_3_fu_464_p2;
        icmp_ln18_reg_753 <= icmp_ln18_fu_446_p2;
        icmp_ln25_1_reg_747 <= icmp_ln25_1_fu_440_p2;
        icmp_ln25_reg_741 <= icmp_ln25_fu_428_p2;
        x_fp_sig_1_reg_736 <= x_fp_sig_1_fu_393_p1;
        x_fp_sign_reg_731 <= data_fu_372_p1[32'd63];
        ymaggreater_1_reg_778 <= ymaggreater_1_fu_490_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((sweep_rx0_0_TVALID == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((receive_fifo_0_full_n == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        receive_fifo_0_blk_n = receive_fifo_0_full_n;
    end else begin
        receive_fifo_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        receive_fifo_0_din = data_temp_15_fu_347_p5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        receive_fifo_0_din = grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_din;
    end else begin
        receive_fifo_0_din = grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_din;
    end
end

always @ (*) begin
    if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        receive_fifo_0_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        receive_fifo_0_write = grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_receive_fifo_0_write;
    end else begin
        receive_fifo_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        return_r = conv_fu_112;
    end else begin
        return_r = return_r_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln69_fu_269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        sweep_rx0_0_TDATA_blk_n = sweep_rx0_0_TVALID;
    end else begin
        sweep_rx0_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((sweep_rx0_0_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        sweep_rx0_0_TREADY = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sweep_rx0_0_TREADY = grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_sweep_rx0_0_TREADY;
    end else begin
        sweep_rx0_0_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == ap_block_state2) & (icmp_ln69_fu_269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((sweep_rx0_0_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln18_1_fu_548_p2 = (xor_ln25_fu_537_p2 & icmp_ln18_reg_753);

assign and_ln18_2_fu_553_p2 = (xor_ln18_fu_543_p2 & and_ln18_fu_502_p2);

assign and_ln18_3_fu_559_p2 = (and_ln18_2_fu_553_p2 & and_ln18_1_fu_548_p2);

assign and_ln18_4_fu_573_p2 = (icmp_ln18_2_reg_766 & icmp_ln18_1_reg_760);

assign and_ln18_5_fu_583_p2 = (xor_ln18_fu_543_p2 & xor_ln18_1_fu_577_p2);

assign and_ln18_6_fu_589_p2 = (icmp_ln18_reg_753 & and_ln18_5_fu_583_p2);

assign and_ln18_7_fu_617_p2 = (xor_ln25_reg_788 & or_ln18_1_fu_612_p2);

assign and_ln18_8_fu_622_p2 = (and_ln18_reg_783 & and_ln18_7_fu_617_p2);

assign and_ln18_fu_502_p2 = (icmp_ln18_2_reg_766 & icmp_ln18_1_reg_760);

assign and_ln25_1_fu_533_p2 = (icmp_ln25_reg_741 & icmp_ln25_1_reg_747);

assign and_ln25_fu_498_p2 = (icmp_ln25_reg_741 & icmp_ln25_1_reg_747);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((icmp_ln69_fu_269_p2 == 1'd0) & (sweep_rx0_0_TVALID == 1'b0));
end

assign bitcast_ln88_fu_333_p1 = fp_uint_tmp_fu_323_p4;

assign conv_1_fu_176_p0 = ((and_ln18_8_fu_622_p2[0:0] == 1'b1) ? dc_reg_717 : res_3_reg_793);

assign data_2_fu_397_p1 = dc_3_reg_724;

assign data_fu_372_p1 = dc_reg_717;

assign data_temp_14_fu_291_p5 = {{data_temp_fu_120[127:96]}, {tmp_fu_281_p4}};

assign data_temp_15_fu_347_p5 = {{trunc_ln86_reg_706}, {grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_data_temp_13_out[95:0]}};

assign fp_uint_tmp_fu_323_p4 = {{sweep_rx0_0_TDATA[63:32]}};

assign grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start = grp_receive4AIE_1_Pipeline_VITIS_LOOP_76_2_fu_158_ap_start_reg;

assign i_9_fu_263_p2 = (i_04_fu_116 + 4'd1);

assign icmp_ln18_1_fu_452_p2 = ((y_fp_exp_fu_408_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln18_2_fu_458_p2 = ((y_fp_sig_fu_418_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_3_fu_464_p2 = ((x_fp_sig_1_fu_393_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_446_p2 = ((x_fp_exp_fu_383_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln25_1_fu_440_p2 = ((or_ln25_1_fu_434_p2 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_428_p2 = ((or_ln25_fu_422_p2 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_269_p2 = ((i_04_fu_116 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln18_1_fu_612_p2 = (xor_ln18_2_fu_607_p2 | icmp_ln18_3_reg_772);

assign or_ln18_fu_594_p2 = (and_ln25_fu_498_p2 | and_ln18_6_fu_589_p2);

assign or_ln25_1_fu_434_p2 = (y_fp_sig_fu_418_p1 | x_fp_sig_1_fu_393_p1);

assign or_ln25_fu_422_p2 = (y_fp_exp_fu_408_p4 | x_fp_exp_fu_383_p4);

assign res_1_fu_529_p1 = t_fu_520_p4;

assign res_2_fu_565_p3 = ((and_ln18_3_fu_559_p2[0:0] == 1'b1) ? res_1_fu_529_p1 : res_fu_506_p3);

assign res_3_fu_600_p3 = ((or_ln18_fu_594_p2[0:0] == 1'b1) ? dc_3_reg_724 : res_2_fu_565_p3);

assign res_fu_506_p3 = ((ymaggreater_1_reg_778[0:0] == 1'b1) ? dc_3_reg_724 : dc_reg_717);

assign select_ln39_fu_482_p3 = ((x_fp_sign_fu_375_p3[0:0] == 1'b1) ? xor_ln39_fu_476_p2 : ymaggreater_fu_470_p2);

assign t_fu_520_p4 = {{{x_fp_sign_reg_731}, {11'd2047}}, {x_fp_sig_fu_511_p4}};

assign tmp_fu_281_p4 = {{sweep_rx0_0_TDATA[127:32]}};

assign trunc_ln86_fu_319_p1 = sweep_rx0_0_TDATA[31:0];

assign x_fp_exp_fu_383_p4 = {{data_fu_372_p1[62:52]}};

assign x_fp_sig_1_fu_393_p1 = data_fu_372_p1[51:0];

assign x_fp_sig_fu_511_p4 = {|(1'd1), x_fp_sig_1_reg_736[51 - 1:0]};

assign x_fp_sign_fu_375_p3 = data_fu_372_p1[32'd63];

assign xor_ln18_1_fu_577_p2 = (1'd1 ^ and_ln18_4_fu_573_p2);

assign xor_ln18_2_fu_607_p2 = (icmp_ln18_reg_753 ^ 1'd1);

assign xor_ln18_fu_543_p2 = (icmp_ln18_3_reg_772 ^ 1'd1);

assign xor_ln25_fu_537_p2 = (1'd1 ^ and_ln25_1_fu_533_p2);

assign xor_ln39_fu_476_p2 = (ymaggreater_fu_470_p2 ^ 1'd1);

assign y_fp_exp_fu_408_p4 = {{data_2_fu_397_p1[62:52]}};

assign y_fp_sig_fu_418_p1 = data_2_fu_397_p1[51:0];

assign y_fp_sign_fu_400_p3 = data_2_fu_397_p1[32'd63];

assign ymaggreater_1_fu_490_p3 = ((y_fp_sign_fu_400_p3[0:0] == 1'b1) ? select_ln39_fu_482_p3 : ymaggreater_fu_470_p2);

assign ymaggreater_fu_470_p2 = (($signed(data_fu_372_p1) < $signed(data_2_fu_397_p1)) ? 1'b1 : 1'b0);

endmodule //TopPL_receive4AIE_1
