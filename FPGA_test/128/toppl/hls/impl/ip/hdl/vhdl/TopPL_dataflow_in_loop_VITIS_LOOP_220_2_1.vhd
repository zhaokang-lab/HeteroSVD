-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TopPL_dataflow_in_loop_VITIS_LOOP_220_2_1 is
port (
    receive_fifo_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    receive_fifo_0_full_n : IN STD_LOGIC;
    receive_fifo_0_write : OUT STD_LOGIC;
    sweep_rx0_0_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    sweep_rx0_0_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_0_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    receive_fifo_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    receive_fifo_1_full_n : IN STD_LOGIC;
    receive_fifo_1_write : OUT STD_LOGIC;
    sweep_rx0_1_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    sweep_rx0_1_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_1_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    convSet_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    convSet_0_full_n : IN STD_LOGIC;
    convSet_0_write : OUT STD_LOGIC;
    convSet_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    convSet_1_full_n : IN STD_LOGIC;
    convSet_1_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sweep_rx0_0_TVALID : IN STD_LOGIC;
    sweep_rx0_0_TREADY : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    sweep_rx0_1_TVALID : IN STD_LOGIC;
    sweep_rx0_1_TREADY : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of TopPL_dataflow_in_loop_VITIS_LOOP_220_2_1 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal receive4AIE_1_U0_ap_start : STD_LOGIC;
    signal receive4AIE_1_U0_ap_done : STD_LOGIC;
    signal receive4AIE_1_U0_ap_continue : STD_LOGIC;
    signal receive4AIE_1_U0_ap_idle : STD_LOGIC;
    signal receive4AIE_1_U0_ap_ready : STD_LOGIC;
    signal receive4AIE_1_U0_return_r : STD_LOGIC_VECTOR (31 downto 0);
    signal receive4AIE_1_U0_receive_fifo_0_din : STD_LOGIC_VECTOR (127 downto 0);
    signal receive4AIE_1_U0_receive_fifo_0_write : STD_LOGIC;
    signal receive4AIE_1_U0_sweep_rx0_0_TREADY : STD_LOGIC;
    signal conv0_channel_full_n : STD_LOGIC;
    signal receive4AIE_U0_ap_start : STD_LOGIC;
    signal receive4AIE_U0_ap_done : STD_LOGIC;
    signal receive4AIE_U0_ap_continue : STD_LOGIC;
    signal receive4AIE_U0_ap_idle : STD_LOGIC;
    signal receive4AIE_U0_ap_ready : STD_LOGIC;
    signal receive4AIE_U0_return_r : STD_LOGIC_VECTOR (31 downto 0);
    signal receive4AIE_U0_receive_fifo_1_din : STD_LOGIC_VECTOR (127 downto 0);
    signal receive4AIE_U0_receive_fifo_1_write : STD_LOGIC;
    signal receive4AIE_U0_sweep_rx0_1_TREADY : STD_LOGIC;
    signal conv1_channel_full_n : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc_U0_ap_start : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc_U0_ap_done : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc_U0_ap_continue : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc_U0_ap_idle : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc_U0_ap_ready : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc_U0_empty : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_92_full_n : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc11_U0_ap_start : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc11_U0_ap_done : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc11_U0_ap_continue : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc11_U0_ap_idle : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc11_U0_ap_ready : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc11_U0_convSet_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_newFuncRoot_proc_proc11_U0_convSet_0_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc12_U0_ap_start : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc12_U0_ap_done : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc12_U0_ap_continue : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc12_U0_ap_idle : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc12_U0_ap_ready : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc12_U0_empty : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_full_n : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc13_U0_ap_start : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc13_U0_ap_done : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc13_U0_ap_continue : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc13_U0_ap_idle : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc13_U0_ap_ready : STD_LOGIC;
    signal Block_newFuncRoot_proc_proc13_U0_convSet_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_newFuncRoot_proc_proc13_U0_convSet_1_write : STD_LOGIC;
    signal conv0_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv0_channel_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal conv0_channel_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal conv0_channel_empty_n : STD_LOGIC;
    signal conv1_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_channel_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal conv1_channel_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal conv1_channel_empty_n : STD_LOGIC;
    signal empty_92_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_92_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_92_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_92_empty_n : STD_LOGIC;
    signal empty_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_receive4AIE_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_receive4AIE_1_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_receive4AIE_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_receive4AIE_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component TopPL_receive4AIE_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        receive_fifo_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        receive_fifo_0_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
        receive_fifo_0_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
        receive_fifo_0_full_n : IN STD_LOGIC;
        receive_fifo_0_write : OUT STD_LOGIC;
        sweep_rx0_0_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        sweep_rx0_0_TVALID : IN STD_LOGIC;
        sweep_rx0_0_TREADY : OUT STD_LOGIC;
        sweep_rx0_0_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_0_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component TopPL_receive4AIE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        return_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        receive_fifo_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        receive_fifo_1_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
        receive_fifo_1_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
        receive_fifo_1_full_n : IN STD_LOGIC;
        receive_fifo_1_write : OUT STD_LOGIC;
        sweep_rx0_1_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        sweep_rx0_1_TVALID : IN STD_LOGIC;
        sweep_rx0_1_TREADY : OUT STD_LOGIC;
        sweep_rx0_1_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_1_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component TopPL_Block_newFuncRoot_proc_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv0 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component TopPL_Block_newFuncRoot_proc_proc11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        convSet_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        convSet_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        convSet_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        convSet_0_full_n : IN STD_LOGIC;
        convSet_0_write : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component TopPL_Block_newFuncRoot_proc_proc12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component TopPL_Block_newFuncRoot_proc_proc13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        convSet_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        convSet_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        convSet_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        convSet_1_full_n : IN STD_LOGIC;
        convSet_1_write : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component TopPL_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    receive4AIE_1_U0 : component TopPL_receive4AIE_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => receive4AIE_1_U0_ap_start,
        ap_done => receive4AIE_1_U0_ap_done,
        ap_continue => receive4AIE_1_U0_ap_continue,
        ap_idle => receive4AIE_1_U0_ap_idle,
        ap_ready => receive4AIE_1_U0_ap_ready,
        return_r => receive4AIE_1_U0_return_r,
        receive_fifo_0_din => receive4AIE_1_U0_receive_fifo_0_din,
        receive_fifo_0_num_data_valid => ap_const_lv13_0,
        receive_fifo_0_fifo_cap => ap_const_lv13_0,
        receive_fifo_0_full_n => receive_fifo_0_full_n,
        receive_fifo_0_write => receive4AIE_1_U0_receive_fifo_0_write,
        sweep_rx0_0_TDATA => sweep_rx0_0_TDATA,
        sweep_rx0_0_TVALID => sweep_rx0_0_TVALID,
        sweep_rx0_0_TREADY => receive4AIE_1_U0_sweep_rx0_0_TREADY,
        sweep_rx0_0_TKEEP => sweep_rx0_0_TKEEP,
        sweep_rx0_0_TSTRB => sweep_rx0_0_TSTRB,
        sweep_rx0_0_TLAST => sweep_rx0_0_TLAST);

    receive4AIE_U0 : component TopPL_receive4AIE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => receive4AIE_U0_ap_start,
        ap_done => receive4AIE_U0_ap_done,
        ap_continue => receive4AIE_U0_ap_continue,
        ap_idle => receive4AIE_U0_ap_idle,
        ap_ready => receive4AIE_U0_ap_ready,
        return_r => receive4AIE_U0_return_r,
        receive_fifo_1_din => receive4AIE_U0_receive_fifo_1_din,
        receive_fifo_1_num_data_valid => ap_const_lv13_0,
        receive_fifo_1_fifo_cap => ap_const_lv13_0,
        receive_fifo_1_full_n => receive_fifo_1_full_n,
        receive_fifo_1_write => receive4AIE_U0_receive_fifo_1_write,
        sweep_rx0_1_TDATA => sweep_rx0_1_TDATA,
        sweep_rx0_1_TVALID => sweep_rx0_1_TVALID,
        sweep_rx0_1_TREADY => receive4AIE_U0_sweep_rx0_1_TREADY,
        sweep_rx0_1_TKEEP => sweep_rx0_1_TKEEP,
        sweep_rx0_1_TSTRB => sweep_rx0_1_TSTRB,
        sweep_rx0_1_TLAST => sweep_rx0_1_TLAST);

    Block_newFuncRoot_proc_proc_U0 : component TopPL_Block_newFuncRoot_proc_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_newFuncRoot_proc_proc_U0_ap_start,
        ap_done => Block_newFuncRoot_proc_proc_U0_ap_done,
        ap_continue => Block_newFuncRoot_proc_proc_U0_ap_continue,
        ap_idle => Block_newFuncRoot_proc_proc_U0_ap_idle,
        ap_ready => Block_newFuncRoot_proc_proc_U0_ap_ready,
        conv0 => conv0_channel_dout,
        empty => Block_newFuncRoot_proc_proc_U0_empty);

    Block_newFuncRoot_proc_proc11_U0 : component TopPL_Block_newFuncRoot_proc_proc11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_newFuncRoot_proc_proc11_U0_ap_start,
        ap_done => Block_newFuncRoot_proc_proc11_U0_ap_done,
        ap_continue => Block_newFuncRoot_proc_proc11_U0_ap_continue,
        ap_idle => Block_newFuncRoot_proc_proc11_U0_ap_idle,
        ap_ready => Block_newFuncRoot_proc_proc11_U0_ap_ready,
        convSet_0_din => Block_newFuncRoot_proc_proc11_U0_convSet_0_din,
        convSet_0_num_data_valid => ap_const_lv3_0,
        convSet_0_fifo_cap => ap_const_lv3_0,
        convSet_0_full_n => convSet_0_full_n,
        convSet_0_write => Block_newFuncRoot_proc_proc11_U0_convSet_0_write,
        empty => empty_92_dout);

    Block_newFuncRoot_proc_proc12_U0 : component TopPL_Block_newFuncRoot_proc_proc12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_newFuncRoot_proc_proc12_U0_ap_start,
        ap_done => Block_newFuncRoot_proc_proc12_U0_ap_done,
        ap_continue => Block_newFuncRoot_proc_proc12_U0_ap_continue,
        ap_idle => Block_newFuncRoot_proc_proc12_U0_ap_idle,
        ap_ready => Block_newFuncRoot_proc_proc12_U0_ap_ready,
        conv1 => conv1_channel_dout,
        empty => Block_newFuncRoot_proc_proc12_U0_empty);

    Block_newFuncRoot_proc_proc13_U0 : component TopPL_Block_newFuncRoot_proc_proc13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_newFuncRoot_proc_proc13_U0_ap_start,
        ap_done => Block_newFuncRoot_proc_proc13_U0_ap_done,
        ap_continue => Block_newFuncRoot_proc_proc13_U0_ap_continue,
        ap_idle => Block_newFuncRoot_proc_proc13_U0_ap_idle,
        ap_ready => Block_newFuncRoot_proc_proc13_U0_ap_ready,
        convSet_1_din => Block_newFuncRoot_proc_proc13_U0_convSet_1_din,
        convSet_1_num_data_valid => ap_const_lv3_0,
        convSet_1_fifo_cap => ap_const_lv3_0,
        convSet_1_full_n => convSet_1_full_n,
        convSet_1_write => Block_newFuncRoot_proc_proc13_U0_convSet_1_write,
        empty => empty_dout);

    conv0_channel_U : component TopPL_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => receive4AIE_1_U0_return_r,
        if_full_n => conv0_channel_full_n,
        if_write => receive4AIE_1_U0_ap_done,
        if_dout => conv0_channel_dout,
        if_num_data_valid => conv0_channel_num_data_valid,
        if_fifo_cap => conv0_channel_fifo_cap,
        if_empty_n => conv0_channel_empty_n,
        if_read => Block_newFuncRoot_proc_proc_U0_ap_ready);

    conv1_channel_U : component TopPL_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => receive4AIE_U0_return_r,
        if_full_n => conv1_channel_full_n,
        if_write => receive4AIE_U0_ap_done,
        if_dout => conv1_channel_dout,
        if_num_data_valid => conv1_channel_num_data_valid,
        if_fifo_cap => conv1_channel_fifo_cap,
        if_empty_n => conv1_channel_empty_n,
        if_read => Block_newFuncRoot_proc_proc12_U0_ap_ready);

    empty_92_U : component TopPL_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_newFuncRoot_proc_proc_U0_empty,
        if_full_n => empty_92_full_n,
        if_write => Block_newFuncRoot_proc_proc_U0_ap_done,
        if_dout => empty_92_dout,
        if_num_data_valid => empty_92_num_data_valid,
        if_fifo_cap => empty_92_fifo_cap,
        if_empty_n => empty_92_empty_n,
        if_read => Block_newFuncRoot_proc_proc11_U0_ap_ready);

    empty_U : component TopPL_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_newFuncRoot_proc_proc12_U0_empty,
        if_full_n => empty_full_n,
        if_write => Block_newFuncRoot_proc_proc12_U0_ap_done,
        if_dout => empty_dout,
        if_num_data_valid => empty_num_data_valid,
        if_fifo_cap => empty_fifo_cap,
        if_empty_n => empty_empty_n,
        if_read => Block_newFuncRoot_proc_proc13_U0_ap_ready);





    ap_sync_reg_receive4AIE_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_receive4AIE_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_receive4AIE_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_receive4AIE_1_U0_ap_ready <= ap_sync_receive4AIE_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_receive4AIE_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_receive4AIE_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_receive4AIE_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_receive4AIE_U0_ap_ready <= ap_sync_receive4AIE_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    Block_newFuncRoot_proc_proc11_U0_ap_continue <= ap_sync_continue;
    Block_newFuncRoot_proc_proc11_U0_ap_start <= empty_92_empty_n;
    Block_newFuncRoot_proc_proc12_U0_ap_continue <= empty_full_n;
    Block_newFuncRoot_proc_proc12_U0_ap_start <= conv1_channel_empty_n;
    Block_newFuncRoot_proc_proc13_U0_ap_continue <= ap_sync_continue;
    Block_newFuncRoot_proc_proc13_U0_ap_start <= empty_empty_n;
    Block_newFuncRoot_proc_proc_U0_ap_continue <= empty_92_full_n;
    Block_newFuncRoot_proc_proc_U0_ap_start <= conv0_channel_empty_n;
    ap_done <= ap_sync_done;
    ap_idle <= (receive4AIE_U0_ap_idle and receive4AIE_1_U0_ap_idle and (empty_empty_n xor ap_const_logic_1) and (empty_92_empty_n xor ap_const_logic_1) and (conv1_channel_empty_n xor ap_const_logic_1) and (conv0_channel_empty_n xor ap_const_logic_1) and Block_newFuncRoot_proc_proc_U0_ap_idle and Block_newFuncRoot_proc_proc13_U0_ap_idle and Block_newFuncRoot_proc_proc12_U0_ap_idle and Block_newFuncRoot_proc_proc11_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (Block_newFuncRoot_proc_proc13_U0_ap_done and Block_newFuncRoot_proc_proc11_U0_ap_done);
    ap_sync_ready <= (ap_sync_receive4AIE_U0_ap_ready and ap_sync_receive4AIE_1_U0_ap_ready);
    ap_sync_receive4AIE_1_U0_ap_ready <= (receive4AIE_1_U0_ap_ready or ap_sync_reg_receive4AIE_1_U0_ap_ready);
    ap_sync_receive4AIE_U0_ap_ready <= (receive4AIE_U0_ap_ready or ap_sync_reg_receive4AIE_U0_ap_ready);
    convSet_0_din <= Block_newFuncRoot_proc_proc11_U0_convSet_0_din;
    convSet_0_write <= Block_newFuncRoot_proc_proc11_U0_convSet_0_write;
    convSet_1_din <= Block_newFuncRoot_proc_proc13_U0_convSet_1_din;
    convSet_1_write <= Block_newFuncRoot_proc_proc13_U0_convSet_1_write;
    receive4AIE_1_U0_ap_continue <= conv0_channel_full_n;
    receive4AIE_1_U0_ap_start <= ((ap_sync_reg_receive4AIE_1_U0_ap_ready xor ap_const_logic_1) and ap_start);
    receive4AIE_U0_ap_continue <= conv1_channel_full_n;
    receive4AIE_U0_ap_start <= ((ap_sync_reg_receive4AIE_U0_ap_ready xor ap_const_logic_1) and ap_start);
    receive_fifo_0_din <= receive4AIE_1_U0_receive_fifo_0_din;
    receive_fifo_0_write <= receive4AIE_1_U0_receive_fifo_0_write;
    receive_fifo_1_din <= receive4AIE_U0_receive_fifo_1_din;
    receive_fifo_1_write <= receive4AIE_U0_receive_fifo_1_write;
    sweep_rx0_0_TREADY <= receive4AIE_1_U0_sweep_rx0_0_TREADY;
    sweep_rx0_1_TREADY <= receive4AIE_U0_sweep_rx0_1_TREADY;
end behav;
