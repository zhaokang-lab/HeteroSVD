// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TopPL_receive4DDR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        receive_fifo_0_din,
        receive_fifo_0_num_data_valid,
        receive_fifo_0_fifo_cap,
        receive_fifo_0_full_n,
        receive_fifo_0_write,
        norm_rx0_TDATA,
        norm_rx0_TVALID,
        norm_rx0_TREADY,
        norm_rx0_TKEEP,
        norm_rx0_TSTRB,
        norm_rx0_TLAST
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [127:0] receive_fifo_0_din;
input  [12:0] receive_fifo_0_num_data_valid;
input  [12:0] receive_fifo_0_fifo_cap;
input   receive_fifo_0_full_n;
output   receive_fifo_0_write;
input  [127:0] norm_rx0_TDATA;
input   norm_rx0_TVALID;
output   norm_rx0_TREADY;
input  [15:0] norm_rx0_TKEEP;
input  [15:0] norm_rx0_TSTRB;
input  [0:0] norm_rx0_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[127:0] receive_fifo_0_din;
reg receive_fifo_0_write;
reg norm_rx0_TREADY;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    receive_fifo_0_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    norm_rx0_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln32_fu_194_p2;
wire    ap_CS_fsm_state5;
wire   [127:0] data_temp_2_fu_216_p5;
reg   [127:0] data_temp_2_reg_335;
wire   [31:0] trunc_ln50_fu_244_p1;
reg   [31:0] trunc_ln50_reg_343;
reg   [31:0] sigma_reg_348;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_done;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_idle;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_ready;
wire   [127:0] grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_din;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_write;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_norm_rx0_TREADY;
wire   [127:0] grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_5_out;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_5_out_ap_vld;
wire   [127:0] grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_4_out_o;
wire    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_4_out_o_ap_vld;
reg    grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [127:0] data_temp_fu_88;
reg   [3:0] i_fu_84;
wire   [3:0] i_8_fu_188_p2;
reg    ap_block_state2;
reg   [127:0] data_temp_1_fu_92;
wire   [127:0] data_temp_6_fu_264_p5;
wire   [127:0] zext_ln53_fu_289_p1;
wire   [95:0] tmp_fu_206_p4;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start_reg = 1'b0;
#0 data_temp_fu_88 = 128'd0;
#0 i_fu_84 = 4'd0;
#0 data_temp_1_fu_92 = 128'd0;
end

TopPL_receive4DDR_Pipeline_VITIS_LOOP_39_2 grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start),
    .ap_done(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_done),
    .ap_idle(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_idle),
    .ap_ready(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_ready),
    .norm_rx0_TVALID(norm_rx0_TVALID),
    .receive_fifo_0_din(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_din),
    .receive_fifo_0_num_data_valid(13'd0),
    .receive_fifo_0_fifo_cap(13'd0),
    .receive_fifo_0_full_n(receive_fifo_0_full_n),
    .receive_fifo_0_write(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_write),
    .data_temp_1(data_temp_1_fu_92),
    .data_temp_2(data_temp_2_reg_335),
    .norm_rx0_TDATA(norm_rx0_TDATA),
    .norm_rx0_TREADY(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_norm_rx0_TREADY),
    .norm_rx0_TKEEP(norm_rx0_TKEEP),
    .norm_rx0_TSTRB(norm_rx0_TSTRB),
    .norm_rx0_TLAST(norm_rx0_TLAST),
    .data_temp_5_out(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_5_out),
    .data_temp_5_out_ap_vld(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_5_out_ap_vld),
    .data_temp_4_out_i(data_temp_fu_88),
    .data_temp_4_out_o(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_4_out_o),
    .data_temp_4_out_o_ap_vld(grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_4_out_o_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start_reg <= 1'b1;
        end else if ((grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_ready == 1'b1)) begin
            grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        data_temp_1_fu_92 <= 128'd0;
    end else if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        data_temp_1_fu_92 <= data_temp_6_fu_264_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        data_temp_fu_88 <= 128'd0;
    end else if (((grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_4_out_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        data_temp_fu_88 <= grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_4_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_84 <= 4'd0;
    end else if (((icmp_ln32_fu_194_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2))) begin
        i_fu_84 <= i_8_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_temp_2_reg_335 <= data_temp_2_fu_216_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sigma_reg_348 <= {{norm_rx0_TDATA[63:32]}};
        trunc_ln50_reg_343 <= trunc_ln50_fu_244_p1;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((norm_rx0_TVALID == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((receive_fifo_0_full_n == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((receive_fifo_0_full_n == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((icmp_ln32_fu_194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln32_fu_194_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        norm_rx0_TDATA_blk_n = norm_rx0_TVALID;
    end else begin
        norm_rx0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln32_fu_194_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2)) | ((norm_rx0_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        norm_rx0_TREADY = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        norm_rx0_TREADY = grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_norm_rx0_TREADY;
    end else begin
        norm_rx0_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        receive_fifo_0_blk_n = receive_fifo_0_full_n;
    end else begin
        receive_fifo_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        receive_fifo_0_din = zext_ln53_fu_289_p1;
    end else if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        receive_fifo_0_din = data_temp_6_fu_264_p5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        receive_fifo_0_din = grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_din;
    end else begin
        receive_fifo_0_din = grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_din;
    end
end

always @ (*) begin
    if ((((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        receive_fifo_0_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        receive_fifo_0_write = grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_receive_fifo_0_write;
    end else begin
        receive_fifo_0_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln32_fu_194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln32_fu_194_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((norm_rx0_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((receive_fifo_0_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state2 = ((icmp_ln32_fu_194_p2 == 1'd0) & (norm_rx0_TVALID == 1'b0));
end

assign data_temp_2_fu_216_p5 = {{data_temp_fu_88[127:96]}, {tmp_fu_206_p4}};

assign data_temp_6_fu_264_p5 = {{trunc_ln50_reg_343}, {grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_data_temp_5_out[95:0]}};

assign grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start = grp_receive4DDR_Pipeline_VITIS_LOOP_39_2_fu_119_ap_start_reg;

assign i_8_fu_188_p2 = (i_fu_84 + 4'd1);

assign icmp_ln32_fu_194_p2 = ((i_fu_84 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_fu_206_p4 = {{norm_rx0_TDATA[127:32]}};

assign trunc_ln50_fu_244_p1 = norm_rx0_TDATA[31:0];

assign zext_ln53_fu_289_p1 = sigma_reg_348;

endmodule //TopPL_receive4DDR
