-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TopPL_dataflow_parent_loop_proc10 is
port (
    receive_fifo_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    receive_fifo_0_full_n : IN STD_LOGIC;
    receive_fifo_0_write : OUT STD_LOGIC;
    sweep_rx0_0_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    sweep_rx0_0_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_0_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    receive_fifo_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    receive_fifo_1_full_n : IN STD_LOGIC;
    receive_fifo_1_write : OUT STD_LOGIC;
    sweep_rx0_1_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    sweep_rx0_1_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_1_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    sweep_rx0_1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    convSet_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    convSet_0_full_n : IN STD_LOGIC;
    convSet_0_write : OUT STD_LOGIC;
    convSet_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    convSet_1_full_n : IN STD_LOGIC;
    convSet_1_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sweep_rx0_0_TVALID : IN STD_LOGIC;
    sweep_rx0_0_TREADY : OUT STD_LOGIC;
    sweep_rx0_1_TVALID : IN STD_LOGIC;
    sweep_rx0_1_TREADY : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of TopPL_dataflow_parent_loop_proc10 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_din : STD_LOGIC_VECTOR (127 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_din : STD_LOGIC_VECTOR (127 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_0_TREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_1_TREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component TopPL_dataflow_in_loop_VITIS_LOOP_220_2_1 IS
    port (
        receive_fifo_0_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        receive_fifo_0_full_n : IN STD_LOGIC;
        receive_fifo_0_write : OUT STD_LOGIC;
        sweep_rx0_0_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        sweep_rx0_0_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_0_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        receive_fifo_1_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        receive_fifo_1_full_n : IN STD_LOGIC;
        receive_fifo_1_write : OUT STD_LOGIC;
        sweep_rx0_1_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        sweep_rx0_1_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_1_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        sweep_rx0_1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        convSet_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        convSet_0_full_n : IN STD_LOGIC;
        convSet_0_write : OUT STD_LOGIC;
        convSet_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        convSet_1_full_n : IN STD_LOGIC;
        convSet_1_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        sweep_rx0_0_TVALID : IN STD_LOGIC;
        sweep_rx0_0_TREADY : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        sweep_rx0_1_TVALID : IN STD_LOGIC;
        sweep_rx0_1_TREADY : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_in_loop_VITIS_LOOP_220_2_1_U0 : component TopPL_dataflow_in_loop_VITIS_LOOP_220_2_1
    port map (
        receive_fifo_0_din => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_din,
        receive_fifo_0_full_n => receive_fifo_0_full_n,
        receive_fifo_0_write => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_write,
        sweep_rx0_0_TDATA => sweep_rx0_0_TDATA,
        sweep_rx0_0_TKEEP => sweep_rx0_0_TKEEP,
        sweep_rx0_0_TSTRB => sweep_rx0_0_TSTRB,
        sweep_rx0_0_TLAST => sweep_rx0_0_TLAST,
        receive_fifo_1_din => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_din,
        receive_fifo_1_full_n => receive_fifo_1_full_n,
        receive_fifo_1_write => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_write,
        sweep_rx0_1_TDATA => sweep_rx0_1_TDATA,
        sweep_rx0_1_TKEEP => sweep_rx0_1_TKEEP,
        sweep_rx0_1_TSTRB => sweep_rx0_1_TSTRB,
        sweep_rx0_1_TLAST => sweep_rx0_1_TLAST,
        convSet_0_din => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_din,
        convSet_0_full_n => convSet_0_full_n,
        convSet_0_write => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_write,
        convSet_1_din => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_din,
        convSet_1_full_n => convSet_1_full_n,
        convSet_1_write => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        sweep_rx0_0_TVALID => sweep_rx0_0_TVALID,
        sweep_rx0_0_TREADY => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_0_TREADY,
        ap_start => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_start,
        sweep_rx0_1_TVALID => sweep_rx0_1_TVALID,
        sweep_rx0_1_TREADY => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_1_TREADY,
        ap_done => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done,
        ap_ready => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready,
        ap_idle => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle,
        ap_continue => dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv7_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv7_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv7_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv7_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv7_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv7_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv7_0) and (ap_start = ap_const_logic_0) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound_minus_1 <= std_logic_vector(unsigned(ap_const_lv7_78) - unsigned(ap_const_lv7_1));
    convSet_0_din <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_din;
    convSet_0_write <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_write;
    convSet_1_din <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_din;
    convSet_1_write <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_write;

    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_start <= ap_start;
    receive_fifo_0_din <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_din;
    receive_fifo_0_write <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_write;
    receive_fifo_1_din <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_din;
    receive_fifo_1_write <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_write;
    sweep_rx0_0_TREADY <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_0_TREADY;
    sweep_rx0_1_TREADY <= dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_1_TREADY;
end behav;
