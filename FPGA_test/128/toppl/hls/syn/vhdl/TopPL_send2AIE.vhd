-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TopPL_send2AIE is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    send_fifo_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    send_fifo_0_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    send_fifo_0_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    send_fifo_0_empty_n : IN STD_LOGIC;
    send_fifo_0_read : OUT STD_LOGIC;
    sweep_tx0_0_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    sweep_tx0_0_TVALID : OUT STD_LOGIC;
    sweep_tx0_0_TREADY : IN STD_LOGIC;
    sweep_tx0_0_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    sweep_tx0_0_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    sweep_tx0_0_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of TopPL_send2AIE is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv26_7FF800 : STD_LOGIC_VECTOR (25 downto 0) := "00011111111111100000000000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal send_fifo_0_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln102_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sweep_tx0_0_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal i_5_reg_320 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal send_fifo_0_read_reg_331 : STD_LOGIC_VECTOR (127 downto 0);
    signal trunc_ln108_fu_197_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal trunc_ln108_reg_337 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_s_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal data_temp_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_temp_ce0 : STD_LOGIC;
    signal data_temp_we0 : STD_LOGIC;
    signal data_temp_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal data_temp_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal data_temp_ce1 : STD_LOGIC;
    signal data_temp_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_done : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_idle : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_ready : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_send_fifo_0_read : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TREADY : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce0 : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_we0 : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce1 : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID : STD_LOGIC;
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TKEEP : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_fu_90 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal i_6_fu_183_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_data_fu_261_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal zext_ln98_fu_293_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal header_fu_213_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_223_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln7_3_fu_220_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln15_5_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln15_fu_237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln15_6_fu_249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln14_fu_216_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_data_3_fu_286_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component TopPL_send2AIE_Pipeline_VITIS_LOOP_112_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        send_fifo_0_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        send_fifo_0_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        send_fifo_0_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        send_fifo_0_empty_n : IN STD_LOGIC;
        send_fifo_0_read : OUT STD_LOGIC;
        sweep_tx0_0_TREADY : IN STD_LOGIC;
        data_temp_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_temp_ce0 : OUT STD_LOGIC;
        data_temp_we0 : OUT STD_LOGIC;
        data_temp_d0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        data_temp_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_temp_ce1 : OUT STD_LOGIC;
        data_temp_q1 : IN STD_LOGIC_VECTOR (127 downto 0);
        sweep_tx0_0_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        sweep_tx0_0_TVALID : OUT STD_LOGIC;
        sweep_tx0_0_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
        sweep_tx0_0_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        sweep_tx0_0_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component TopPL_send2AIE_data_temp_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    data_temp_U : component TopPL_send2AIE_data_temp_RAM_AUTO_1R1W
    generic map (
        DataWidth => 128,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => data_temp_address0,
        ce0 => data_temp_ce0,
        we0 => data_temp_we0,
        d0 => data_temp_d0,
        q0 => data_temp_q0,
        address1 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address1,
        ce1 => data_temp_ce1,
        q1 => data_temp_q1);

    grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146 : component TopPL_send2AIE_Pipeline_VITIS_LOOP_112_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start,
        ap_done => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_done,
        ap_idle => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_idle,
        ap_ready => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_ready,
        send_fifo_0_dout => send_fifo_0_dout,
        send_fifo_0_num_data_valid => ap_const_lv10_0,
        send_fifo_0_fifo_cap => ap_const_lv10_0,
        send_fifo_0_empty_n => send_fifo_0_empty_n,
        send_fifo_0_read => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_send_fifo_0_read,
        sweep_tx0_0_TREADY => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TREADY,
        data_temp_address0 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address0,
        data_temp_ce0 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce0,
        data_temp_we0 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_we0,
        data_temp_d0 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_d0,
        data_temp_address1 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address1,
        data_temp_ce1 => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce1,
        data_temp_q1 => data_temp_q1,
        sweep_tx0_0_TDATA => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TDATA,
        sweep_tx0_0_TVALID => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID,
        sweep_tx0_0_TKEEP => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TKEEP,
        sweep_tx0_0_TSTRB => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TSTRB,
        sweep_tx0_0_TLAST => grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TLAST);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_90 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln102_fu_189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_fu_90 <= i_6_fu_183_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_5_reg_320 <= i_fu_90;
                send_fifo_0_read_reg_331 <= send_fifo_0_dout;
                trunc_ln108_reg_337 <= trunc_ln108_fu_197_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_s_reg_342 <= data_temp_q0(127 downto 96);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, sweep_tx0_0_TREADY, ap_CS_fsm_state2, icmp_ln102_fu_189_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_block_state1, ap_block_state2, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln102_fu_189_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln102_fu_189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(sweep_tx0_0_TREADY)
    begin
        if ((sweep_tx0_0_TREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_done)
    begin
        if ((grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(sweep_tx0_0_TREADY)
    begin
        if ((sweep_tx0_0_TREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(send_fifo_0_empty_n, icmp_ln102_fu_189_p2)
    begin
                ap_block_state2 <= ((icmp_ln102_fu_189_p2 = ap_const_lv1_0) and (send_fifo_0_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    data_temp_address0_assign_proc : process(ap_CS_fsm_state3, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            data_temp_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_temp_address0 <= ap_const_lv64_0(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_temp_address0 <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_address0;
        else 
            data_temp_address0 <= "X";
        end if; 
    end process;


    data_temp_ce0_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            data_temp_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_temp_ce0 <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce0;
        else 
            data_temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_temp_ce1_assign_proc : process(grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_temp_ce1 <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_ce1;
        else 
            data_temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_temp_d0_assign_proc : process(ap_CS_fsm_state3, send_fifo_0_read_reg_331, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_d0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            data_temp_d0 <= send_fifo_0_read_reg_331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_temp_d0 <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_d0;
        else 
            data_temp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_temp_we0_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_we0, ap_CS_fsm_state5)
    begin
        if (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_temp_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            data_temp_we0 <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_data_temp_we0;
        else 
            data_temp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_ap_start_reg;
    grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TREADY <= (sweep_tx0_0_TREADY and ap_CS_fsm_state5);
    header_fu_213_p1 <= i_5_reg_320(3 - 1 downto 0);
    i_6_fu_183_p2 <= std_logic_vector(unsigned(i_fu_90) + unsigned(ap_const_lv4_1));
    icmp_ln102_fu_189_p2 <= "1" when (i_fu_90 = ap_const_lv4_8) else "0";

    send_fifo_0_blk_n_assign_proc : process(send_fifo_0_empty_n, ap_CS_fsm_state2, icmp_ln102_fu_189_p2)
    begin
        if (((icmp_ln102_fu_189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            send_fifo_0_blk_n <= send_fifo_0_empty_n;
        else 
            send_fifo_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    send_fifo_0_read_assign_proc : process(ap_CS_fsm_state2, icmp_ln102_fu_189_p2, ap_block_state2, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_send_fifo_0_read, ap_CS_fsm_state5)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln102_fu_189_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            send_fifo_0_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            send_fifo_0_read <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_send_fifo_0_read;
        else 
            send_fifo_0_read <= ap_const_logic_0;
        end if; 
    end process;


    sweep_tx0_0_TDATA_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TDATA, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID, ap_CS_fsm_state5, tmp_data_fu_261_p5, zext_ln98_fu_293_p1)
    begin
        if (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            sweep_tx0_0_TDATA <= zext_ln98_fu_293_p1;
        elsif (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sweep_tx0_0_TDATA <= tmp_data_fu_261_p5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID = ap_const_logic_1))) then 
            sweep_tx0_0_TDATA <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TDATA;
        else 
            sweep_tx0_0_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sweep_tx0_0_TDATA_blk_n_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sweep_tx0_0_TDATA_blk_n <= sweep_tx0_0_TREADY;
        else 
            sweep_tx0_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sweep_tx0_0_TKEEP_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TKEEP, ap_CS_fsm_state5)
    begin
        if (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            sweep_tx0_0_TKEEP <= ap_const_lv16_FF;
        elsif (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sweep_tx0_0_TKEEP <= ap_const_lv16_FFFF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID = ap_const_logic_1))) then 
            sweep_tx0_0_TKEEP <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TKEEP;
        else 
            sweep_tx0_0_TKEEP <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sweep_tx0_0_TLAST_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TLAST, ap_CS_fsm_state5)
    begin
        if (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            sweep_tx0_0_TLAST <= ap_const_lv1_1;
        elsif (((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sweep_tx0_0_TLAST <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID = ap_const_logic_1))) then 
            sweep_tx0_0_TLAST <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TLAST;
        else 
            sweep_tx0_0_TLAST <= "X";
        end if; 
    end process;


    sweep_tx0_0_TSTRB_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TSTRB, ap_CS_fsm_state5)
    begin
        if ((((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            sweep_tx0_0_TSTRB <= "XXXXXXXXXXXXXXXX";
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID = ap_const_logic_1))) then 
            sweep_tx0_0_TSTRB <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TSTRB;
        else 
            sweep_tx0_0_TSTRB <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sweep_tx0_0_TVALID_assign_proc : process(sweep_tx0_0_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8, grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID, ap_CS_fsm_state5)
    begin
        if ((((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((sweep_tx0_0_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            sweep_tx0_0_TVALID <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            sweep_tx0_0_TVALID <= grp_send2AIE_Pipeline_VITIS_LOOP_112_2_fu_146_sweep_tx0_0_TVALID;
        else 
            sweep_tx0_0_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    tmp_3_fu_230_p3 <= i_5_reg_320(2 downto 2);
    tmp_data_3_fu_286_p3 <= (ap_const_lv1_0 & tmp_s_reg_342);
    tmp_data_fu_261_p5 <= (((trunc_ln108_reg_337 & xor_ln15_6_fu_249_p2) & ap_const_lv26_7FF800) & zext_ln14_fu_216_p1);
    tmp_fu_223_p3 <= i_5_reg_320(1 downto 1);
    trunc_ln108_fu_197_p1 <= send_fifo_0_dout(96 - 1 downto 0);
    trunc_ln7_3_fu_220_p1 <= i_5_reg_320(1 - 1 downto 0);
    xor_ln15_5_fu_243_p2 <= (trunc_ln7_3_fu_220_p1 xor tmp_3_fu_230_p3);
    xor_ln15_6_fu_249_p2 <= (xor_ln15_fu_237_p2 xor xor_ln15_5_fu_243_p2);
    xor_ln15_fu_237_p2 <= (tmp_fu_223_p3 xor ap_const_lv1_1);
    zext_ln14_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(header_fu_213_p1),5));
    zext_ln98_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_data_3_fu_286_p3),128));
end behav;
