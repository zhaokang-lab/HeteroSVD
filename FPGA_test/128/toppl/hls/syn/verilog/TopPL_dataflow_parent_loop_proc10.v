// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TopPL_dataflow_parent_loop_proc10 (
        receive_fifo_0_din,
        receive_fifo_0_full_n,
        receive_fifo_0_write,
        sweep_rx0_0_TDATA,
        sweep_rx0_0_TKEEP,
        sweep_rx0_0_TSTRB,
        sweep_rx0_0_TLAST,
        receive_fifo_1_din,
        receive_fifo_1_full_n,
        receive_fifo_1_write,
        sweep_rx0_1_TDATA,
        sweep_rx0_1_TKEEP,
        sweep_rx0_1_TSTRB,
        sweep_rx0_1_TLAST,
        convSet_0_din,
        convSet_0_full_n,
        convSet_0_write,
        convSet_1_din,
        convSet_1_full_n,
        convSet_1_write,
        ap_clk,
        ap_rst,
        sweep_rx0_0_TVALID,
        sweep_rx0_0_TREADY,
        sweep_rx0_1_TVALID,
        sweep_rx0_1_TREADY,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [127:0] receive_fifo_0_din;
input   receive_fifo_0_full_n;
output   receive_fifo_0_write;
input  [127:0] sweep_rx0_0_TDATA;
input  [15:0] sweep_rx0_0_TKEEP;
input  [15:0] sweep_rx0_0_TSTRB;
input  [0:0] sweep_rx0_0_TLAST;
output  [127:0] receive_fifo_1_din;
input   receive_fifo_1_full_n;
output   receive_fifo_1_write;
input  [127:0] sweep_rx0_1_TDATA;
input  [15:0] sweep_rx0_1_TKEEP;
input  [15:0] sweep_rx0_1_TSTRB;
input  [0:0] sweep_rx0_1_TLAST;
output  [31:0] convSet_0_din;
input   convSet_0_full_n;
output   convSet_0_write;
output  [31:0] convSet_1_din;
input   convSet_1_full_n;
output   convSet_1_write;
input   ap_clk;
input   ap_rst;
input   sweep_rx0_0_TVALID;
output   sweep_rx0_0_TREADY;
input   sweep_rx0_1_TVALID;
output   sweep_rx0_1_TREADY;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg ap_done;
reg ap_ready;
reg ap_idle;

wire   [127:0] dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_din;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_write;
wire   [127:0] dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_din;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_write;
wire   [31:0] dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_din;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_write;
wire   [31:0] dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_din;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_write;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_0_TREADY;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_start;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_1_TREADY;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready;
wire    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle;
reg    dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue;
reg   [6:0] loop_dataflow_input_count;
reg   [6:0] loop_dataflow_output_count;
wire   [6:0] bound_minus_1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 7'd0;
#0 loop_dataflow_output_count = 7'd0;
end

TopPL_dataflow_in_loop_VITIS_LOOP_220_2_1 dataflow_in_loop_VITIS_LOOP_220_2_1_U0(
    .receive_fifo_0_din(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_din),
    .receive_fifo_0_full_n(receive_fifo_0_full_n),
    .receive_fifo_0_write(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_write),
    .sweep_rx0_0_TDATA(sweep_rx0_0_TDATA),
    .sweep_rx0_0_TKEEP(sweep_rx0_0_TKEEP),
    .sweep_rx0_0_TSTRB(sweep_rx0_0_TSTRB),
    .sweep_rx0_0_TLAST(sweep_rx0_0_TLAST),
    .receive_fifo_1_din(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_din),
    .receive_fifo_1_full_n(receive_fifo_1_full_n),
    .receive_fifo_1_write(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_write),
    .sweep_rx0_1_TDATA(sweep_rx0_1_TDATA),
    .sweep_rx0_1_TKEEP(sweep_rx0_1_TKEEP),
    .sweep_rx0_1_TSTRB(sweep_rx0_1_TSTRB),
    .sweep_rx0_1_TLAST(sweep_rx0_1_TLAST),
    .convSet_0_din(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_din),
    .convSet_0_full_n(convSet_0_full_n),
    .convSet_0_write(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_write),
    .convSet_1_din(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_din),
    .convSet_1_full_n(convSet_1_full_n),
    .convSet_1_write(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .sweep_rx0_0_TVALID(sweep_rx0_0_TVALID),
    .sweep_rx0_0_TREADY(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_0_TREADY),
    .ap_start(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_start),
    .sweep_rx0_1_TVALID(sweep_rx0_1_TVALID),
    .sweep_rx0_1_TREADY(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_1_TREADY),
    .ap_done(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done),
    .ap_ready(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready),
    .ap_idle(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle),
    .ap_continue(dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 7'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 7'd1);
        end else if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 7'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue == 1'b1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 7'd1);
        end else if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue == 1'b1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= 7'd0;
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == 7'd0) & (ap_start == 1'b0) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_idle == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_ready == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(loop_dataflow_output_count == bound_minus_1) | (ap_continue == 1'b1))) begin
        dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue = 1'b1;
    end else begin
        dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_continue = 1'b0;
    end
end

assign bound_minus_1 = (7'd120 - 7'd1);

assign convSet_0_din = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_din;

assign convSet_0_write = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_0_write;

assign convSet_1_din = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_din;

assign convSet_1_write = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_convSet_1_write;

assign dataflow_in_loop_VITIS_LOOP_220_2_1_U0_ap_start = ap_start;

assign receive_fifo_0_din = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_din;

assign receive_fifo_0_write = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_0_write;

assign receive_fifo_1_din = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_din;

assign receive_fifo_1_write = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_receive_fifo_1_write;

assign sweep_rx0_0_TREADY = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_0_TREADY;

assign sweep_rx0_1_TREADY = dataflow_in_loop_VITIS_LOOP_220_2_1_U0_sweep_rx0_1_TREADY;

endmodule //TopPL_dataflow_parent_loop_proc10
