// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TopPL_Send (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        syscontrol_0_dout,
        syscontrol_0_num_data_valid,
        syscontrol_0_fifo_cap,
        syscontrol_0_empty_n,
        syscontrol_0_read,
        send_fifo_0_dout,
        send_fifo_0_num_data_valid,
        send_fifo_0_fifo_cap,
        send_fifo_0_empty_n,
        send_fifo_0_read,
        send_fifo_1_dout,
        send_fifo_1_num_data_valid,
        send_fifo_1_fifo_cap,
        send_fifo_1_empty_n,
        send_fifo_1_read,
        sweep_tx0_0_TDATA,
        sweep_tx0_0_TVALID,
        sweep_tx0_0_TREADY,
        sweep_tx0_0_TKEEP,
        sweep_tx0_0_TSTRB,
        sweep_tx0_0_TLAST,
        sweep_tx0_1_TDATA,
        sweep_tx0_1_TVALID,
        sweep_tx0_1_TREADY,
        sweep_tx0_1_TKEEP,
        sweep_tx0_1_TSTRB,
        sweep_tx0_1_TLAST,
        norm_tx0_TDATA,
        norm_tx0_TVALID,
        norm_tx0_TREADY,
        norm_tx0_TKEEP,
        norm_tx0_TSTRB,
        norm_tx0_TLAST
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] syscontrol_0_dout;
input  [2:0] syscontrol_0_num_data_valid;
input  [2:0] syscontrol_0_fifo_cap;
input   syscontrol_0_empty_n;
output   syscontrol_0_read;
input  [127:0] send_fifo_0_dout;
input  [9:0] send_fifo_0_num_data_valid;
input  [9:0] send_fifo_0_fifo_cap;
input   send_fifo_0_empty_n;
output   send_fifo_0_read;
input  [127:0] send_fifo_1_dout;
input  [9:0] send_fifo_1_num_data_valid;
input  [9:0] send_fifo_1_fifo_cap;
input   send_fifo_1_empty_n;
output   send_fifo_1_read;
output  [127:0] sweep_tx0_0_TDATA;
output   sweep_tx0_0_TVALID;
input   sweep_tx0_0_TREADY;
output  [15:0] sweep_tx0_0_TKEEP;
output  [15:0] sweep_tx0_0_TSTRB;
output  [0:0] sweep_tx0_0_TLAST;
output  [127:0] sweep_tx0_1_TDATA;
output   sweep_tx0_1_TVALID;
input   sweep_tx0_1_TREADY;
output  [15:0] sweep_tx0_1_TKEEP;
output  [15:0] sweep_tx0_1_TSTRB;
output  [0:0] sweep_tx0_1_TLAST;
output  [127:0] norm_tx0_TDATA;
output   norm_tx0_TVALID;
input   norm_tx0_TREADY;
output  [15:0] norm_tx0_TKEEP;
output  [15:0] norm_tx0_TSTRB;
output  [0:0] norm_tx0_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg syscontrol_0_read;
reg send_fifo_0_read;
reg send_fifo_1_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    syscontrol_0_blk_n;
wire    ap_CS_fsm_state2;
wire    grp_dataflow_parent_loop_proc_fu_94_send_fifo_0_read;
wire   [127:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TDATA;
wire   [15:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TKEEP;
wire   [15:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TSTRB;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TLAST;
wire    grp_dataflow_parent_loop_proc_fu_94_send_fifo_1_read;
wire   [127:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TDATA;
wire   [15:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TKEEP;
wire   [15:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TSTRB;
wire   [0:0] grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TLAST;
wire    grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID;
wire    grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TREADY;
wire    grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID;
wire    grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TREADY;
wire    grp_dataflow_parent_loop_proc_fu_94_ap_start;
wire    grp_dataflow_parent_loop_proc_fu_94_ap_done;
wire    grp_dataflow_parent_loop_proc_fu_94_ap_ready;
wire    grp_dataflow_parent_loop_proc_fu_94_ap_idle;
reg    grp_dataflow_parent_loop_proc_fu_94_ap_continue;
wire    grp_send2AIE_3_fu_118_ap_start;
wire    grp_send2AIE_3_fu_118_ap_done;
wire    grp_send2AIE_3_fu_118_ap_idle;
wire    grp_send2AIE_3_fu_118_ap_ready;
reg   [127:0] grp_send2AIE_3_fu_118_send_fifo_0_dout;
reg    grp_send2AIE_3_fu_118_send_fifo_0_empty_n;
wire    grp_send2AIE_3_fu_118_send_fifo_0_read;
wire   [127:0] grp_send2AIE_3_fu_118_norm_tx0_TDATA;
wire    grp_send2AIE_3_fu_118_norm_tx0_TVALID;
wire    grp_send2AIE_3_fu_118_norm_tx0_TREADY;
wire   [15:0] grp_send2AIE_3_fu_118_norm_tx0_TKEEP;
wire   [15:0] grp_send2AIE_3_fu_118_norm_tx0_TSTRB;
wire   [0:0] grp_send2AIE_3_fu_118_norm_tx0_TLAST;
reg    grp_dataflow_parent_loop_proc_fu_94_ap_start_reg;
wire   [0:0] sig_read_fu_88_p2;
wire    ap_CS_fsm_state3;
wire    ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_done;
reg    ap_block_state3_on_subcall_done;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_done;
reg    grp_send2AIE_3_fu_118_ap_start_reg;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln179_fu_159_p2;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
reg   [3:0] i_fu_84;
wire   [3:0] i_14_fu_153_p2;
wire    ap_CS_fsm_state8;
wire    regslice_both_sweep_tx0_0_V_data_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_1_V_data_V_U_apdone_blk;
wire    regslice_both_norm_tx0_V_data_V_U_apdone_blk;
reg    ap_block_state8;
reg   [7:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    sweep_tx0_0_TVALID_int_regslice;
wire    sweep_tx0_0_TREADY_int_regslice;
wire    regslice_both_sweep_tx0_0_V_data_V_U_vld_out;
wire    regslice_both_sweep_tx0_0_V_keep_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_0_V_keep_V_U_ack_in_dummy;
wire    regslice_both_sweep_tx0_0_V_keep_V_U_vld_out;
wire    regslice_both_sweep_tx0_0_V_strb_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_0_V_strb_V_U_ack_in_dummy;
wire    regslice_both_sweep_tx0_0_V_strb_V_U_vld_out;
wire    regslice_both_sweep_tx0_0_V_last_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_0_V_last_V_U_ack_in_dummy;
wire    regslice_both_sweep_tx0_0_V_last_V_U_vld_out;
wire    sweep_tx0_1_TVALID_int_regslice;
wire    sweep_tx0_1_TREADY_int_regslice;
wire    regslice_both_sweep_tx0_1_V_data_V_U_vld_out;
wire    regslice_both_sweep_tx0_1_V_keep_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_1_V_keep_V_U_ack_in_dummy;
wire    regslice_both_sweep_tx0_1_V_keep_V_U_vld_out;
wire    regslice_both_sweep_tx0_1_V_strb_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_1_V_strb_V_U_ack_in_dummy;
wire    regslice_both_sweep_tx0_1_V_strb_V_U_vld_out;
wire    regslice_both_sweep_tx0_1_V_last_V_U_apdone_blk;
wire    regslice_both_sweep_tx0_1_V_last_V_U_ack_in_dummy;
wire    regslice_both_sweep_tx0_1_V_last_V_U_vld_out;
reg    norm_tx0_TVALID_int_regslice;
wire    norm_tx0_TREADY_int_regslice;
wire    regslice_both_norm_tx0_V_data_V_U_vld_out;
wire    regslice_both_norm_tx0_V_keep_V_U_apdone_blk;
wire    regslice_both_norm_tx0_V_keep_V_U_ack_in_dummy;
wire    regslice_both_norm_tx0_V_keep_V_U_vld_out;
wire    regslice_both_norm_tx0_V_strb_V_U_apdone_blk;
wire    regslice_both_norm_tx0_V_strb_V_U_ack_in_dummy;
wire    regslice_both_norm_tx0_V_strb_V_U_vld_out;
wire    regslice_both_norm_tx0_V_last_V_U_apdone_blk;
wire    regslice_both_norm_tx0_V_last_V_U_ack_in_dummy;
wire    regslice_both_norm_tx0_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 grp_dataflow_parent_loop_proc_fu_94_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_done = 1'b0;
#0 grp_send2AIE_3_fu_118_ap_start_reg = 1'b0;
#0 i_fu_84 = 4'd0;
end

TopPL_dataflow_parent_loop_proc grp_dataflow_parent_loop_proc_fu_94(
    .send_fifo_0_dout(send_fifo_0_dout),
    .send_fifo_0_empty_n(send_fifo_0_empty_n),
    .send_fifo_0_read(grp_dataflow_parent_loop_proc_fu_94_send_fifo_0_read),
    .sweep_tx0_0_TDATA(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TDATA),
    .sweep_tx0_0_TKEEP(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TKEEP),
    .sweep_tx0_0_TSTRB(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TSTRB),
    .sweep_tx0_0_TLAST(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TLAST),
    .send_fifo_1_dout(send_fifo_1_dout),
    .send_fifo_1_empty_n(send_fifo_1_empty_n),
    .send_fifo_1_read(grp_dataflow_parent_loop_proc_fu_94_send_fifo_1_read),
    .sweep_tx0_1_TDATA(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TDATA),
    .sweep_tx0_1_TKEEP(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TKEEP),
    .sweep_tx0_1_TSTRB(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TSTRB),
    .sweep_tx0_1_TLAST(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TLAST),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .sweep_tx0_0_TVALID(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID),
    .sweep_tx0_0_TREADY(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TREADY),
    .sweep_tx0_1_TVALID(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID),
    .sweep_tx0_1_TREADY(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TREADY),
    .ap_start(grp_dataflow_parent_loop_proc_fu_94_ap_start),
    .ap_done(grp_dataflow_parent_loop_proc_fu_94_ap_done),
    .ap_ready(grp_dataflow_parent_loop_proc_fu_94_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_proc_fu_94_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_proc_fu_94_ap_continue)
);

TopPL_send2AIE_3 grp_send2AIE_3_fu_118(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_send2AIE_3_fu_118_ap_start),
    .ap_done(grp_send2AIE_3_fu_118_ap_done),
    .ap_idle(grp_send2AIE_3_fu_118_ap_idle),
    .ap_ready(grp_send2AIE_3_fu_118_ap_ready),
    .send_fifo_0_dout(grp_send2AIE_3_fu_118_send_fifo_0_dout),
    .send_fifo_0_num_data_valid(10'd0),
    .send_fifo_0_fifo_cap(10'd0),
    .send_fifo_0_empty_n(grp_send2AIE_3_fu_118_send_fifo_0_empty_n),
    .send_fifo_0_read(grp_send2AIE_3_fu_118_send_fifo_0_read),
    .norm_tx0_TDATA(grp_send2AIE_3_fu_118_norm_tx0_TDATA),
    .norm_tx0_TVALID(grp_send2AIE_3_fu_118_norm_tx0_TVALID),
    .norm_tx0_TREADY(grp_send2AIE_3_fu_118_norm_tx0_TREADY),
    .norm_tx0_TKEEP(grp_send2AIE_3_fu_118_norm_tx0_TKEEP),
    .norm_tx0_TSTRB(grp_send2AIE_3_fu_118_norm_tx0_TSTRB),
    .norm_tx0_TLAST(grp_send2AIE_3_fu_118_norm_tx0_TLAST)
);

TopPL_regslice_both #(
    .DataWidth( 128 ))
regslice_both_sweep_tx0_0_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TDATA),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID),
    .ack_in(sweep_tx0_0_TREADY_int_regslice),
    .data_out(sweep_tx0_0_TDATA),
    .vld_out(regslice_both_sweep_tx0_0_V_data_V_U_vld_out),
    .ack_out(sweep_tx0_0_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_0_V_data_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 16 ))
regslice_both_sweep_tx0_0_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TKEEP),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID),
    .ack_in(regslice_both_sweep_tx0_0_V_keep_V_U_ack_in_dummy),
    .data_out(sweep_tx0_0_TKEEP),
    .vld_out(regslice_both_sweep_tx0_0_V_keep_V_U_vld_out),
    .ack_out(sweep_tx0_0_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_0_V_keep_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 16 ))
regslice_both_sweep_tx0_0_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TSTRB),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID),
    .ack_in(regslice_both_sweep_tx0_0_V_strb_V_U_ack_in_dummy),
    .data_out(sweep_tx0_0_TSTRB),
    .vld_out(regslice_both_sweep_tx0_0_V_strb_V_U_vld_out),
    .ack_out(sweep_tx0_0_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_0_V_strb_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 1 ))
regslice_both_sweep_tx0_0_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TLAST),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID),
    .ack_in(regslice_both_sweep_tx0_0_V_last_V_U_ack_in_dummy),
    .data_out(sweep_tx0_0_TLAST),
    .vld_out(regslice_both_sweep_tx0_0_V_last_V_U_vld_out),
    .ack_out(sweep_tx0_0_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_0_V_last_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 128 ))
regslice_both_sweep_tx0_1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TDATA),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID),
    .ack_in(sweep_tx0_1_TREADY_int_regslice),
    .data_out(sweep_tx0_1_TDATA),
    .vld_out(regslice_both_sweep_tx0_1_V_data_V_U_vld_out),
    .ack_out(sweep_tx0_1_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_1_V_data_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 16 ))
regslice_both_sweep_tx0_1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TKEEP),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID),
    .ack_in(regslice_both_sweep_tx0_1_V_keep_V_U_ack_in_dummy),
    .data_out(sweep_tx0_1_TKEEP),
    .vld_out(regslice_both_sweep_tx0_1_V_keep_V_U_vld_out),
    .ack_out(sweep_tx0_1_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_1_V_keep_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 16 ))
regslice_both_sweep_tx0_1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TSTRB),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID),
    .ack_in(regslice_both_sweep_tx0_1_V_strb_V_U_ack_in_dummy),
    .data_out(sweep_tx0_1_TSTRB),
    .vld_out(regslice_both_sweep_tx0_1_V_strb_V_U_vld_out),
    .ack_out(sweep_tx0_1_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_1_V_strb_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 1 ))
regslice_both_sweep_tx0_1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TLAST),
    .vld_in(grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID),
    .ack_in(regslice_both_sweep_tx0_1_V_last_V_U_ack_in_dummy),
    .data_out(sweep_tx0_1_TLAST),
    .vld_out(regslice_both_sweep_tx0_1_V_last_V_U_vld_out),
    .ack_out(sweep_tx0_1_TREADY),
    .apdone_blk(regslice_both_sweep_tx0_1_V_last_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 128 ))
regslice_both_norm_tx0_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_send2AIE_3_fu_118_norm_tx0_TDATA),
    .vld_in(norm_tx0_TVALID_int_regslice),
    .ack_in(norm_tx0_TREADY_int_regslice),
    .data_out(norm_tx0_TDATA),
    .vld_out(regslice_both_norm_tx0_V_data_V_U_vld_out),
    .ack_out(norm_tx0_TREADY),
    .apdone_blk(regslice_both_norm_tx0_V_data_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 16 ))
regslice_both_norm_tx0_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_send2AIE_3_fu_118_norm_tx0_TKEEP),
    .vld_in(norm_tx0_TVALID_int_regslice),
    .ack_in(regslice_both_norm_tx0_V_keep_V_U_ack_in_dummy),
    .data_out(norm_tx0_TKEEP),
    .vld_out(regslice_both_norm_tx0_V_keep_V_U_vld_out),
    .ack_out(norm_tx0_TREADY),
    .apdone_blk(regslice_both_norm_tx0_V_keep_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 16 ))
regslice_both_norm_tx0_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_send2AIE_3_fu_118_norm_tx0_TSTRB),
    .vld_in(norm_tx0_TVALID_int_regslice),
    .ack_in(regslice_both_norm_tx0_V_strb_V_U_ack_in_dummy),
    .data_out(norm_tx0_TSTRB),
    .vld_out(regslice_both_norm_tx0_V_strb_V_U_vld_out),
    .ack_out(norm_tx0_TREADY),
    .apdone_blk(regslice_both_norm_tx0_V_strb_V_U_apdone_blk)
);

TopPL_regslice_both #(
    .DataWidth( 1 ))
regslice_both_norm_tx0_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_send2AIE_3_fu_118_norm_tx0_TLAST),
    .vld_in(norm_tx0_TVALID_int_regslice),
    .ack_in(regslice_both_norm_tx0_V_last_V_U_ack_in_dummy),
    .data_out(norm_tx0_TLAST),
    .vld_out(regslice_both_norm_tx0_V_last_V_U_vld_out),
    .ack_out(norm_tx0_TREADY),
    .apdone_blk(regslice_both_norm_tx0_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc_fu_94_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc_fu_94_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dataflow_parent_loop_proc_fu_94_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state3) & (ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_ready == 1'b0)) | ((syscontrol_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (sig_read_fu_88_p2 == 1'd1)))) begin
            grp_dataflow_parent_loop_proc_fu_94_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_proc_fu_94_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_proc_fu_94_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_send2AIE_3_fu_118_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_159_p2 == 1'd0)))) begin
            grp_send2AIE_3_fu_118_ap_start_reg <= 1'b1;
        end else if ((grp_send2AIE_3_fu_118_ap_ready == 1'b1)) begin
            grp_send2AIE_3_fu_118_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((syscontrol_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (sig_read_fu_88_p2 == 1'd0))) begin
        i_fu_84 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_159_p2 == 1'd0))) begin
        i_fu_84 <= i_14_fu_153_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((syscontrol_0_empty_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3_on_subcall_done)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_send2AIE_3_fu_118_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_send2AIE_3_fu_118_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state8)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        grp_dataflow_parent_loop_proc_fu_94_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_proc_fu_94_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_send2AIE_3_fu_118_send_fifo_0_dout = send_fifo_1_dout;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_send2AIE_3_fu_118_send_fifo_0_dout = send_fifo_0_dout;
    end else begin
        grp_send2AIE_3_fu_118_send_fifo_0_dout = send_fifo_1_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_send2AIE_3_fu_118_send_fifo_0_empty_n = send_fifo_1_empty_n;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_send2AIE_3_fu_118_send_fifo_0_empty_n = send_fifo_0_empty_n;
    end else begin
        grp_send2AIE_3_fu_118_send_fifo_0_empty_n = send_fifo_1_empty_n;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        norm_tx0_TVALID_int_regslice = grp_send2AIE_3_fu_118_norm_tx0_TVALID;
    end else begin
        norm_tx0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        send_fifo_0_read = grp_send2AIE_3_fu_118_send_fifo_0_read;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        send_fifo_0_read = grp_dataflow_parent_loop_proc_fu_94_send_fifo_0_read;
    end else begin
        send_fifo_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        send_fifo_1_read = grp_send2AIE_3_fu_118_send_fifo_0_read;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        send_fifo_1_read = grp_dataflow_parent_loop_proc_fu_94_send_fifo_1_read;
    end else begin
        send_fifo_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        syscontrol_0_blk_n = syscontrol_0_empty_n;
    end else begin
        syscontrol_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((syscontrol_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        syscontrol_0_read = 1'b1;
    end else begin
        syscontrol_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((syscontrol_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (sig_read_fu_88_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((syscontrol_0_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (sig_read_fu_88_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_159_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_send2AIE_3_fu_118_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_send2AIE_3_fu_118_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_ready & ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state8 = ((regslice_both_norm_tx0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sweep_tx0_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sweep_tx0_0_V_data_V_U_apdone_blk == 1'b1));
end

assign ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_done = (grp_dataflow_parent_loop_proc_fu_94_ap_done | ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_done);

assign ap_sync_grp_dataflow_parent_loop_proc_fu_94_ap_ready = (grp_dataflow_parent_loop_proc_fu_94_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_proc_fu_94_ap_ready);

assign grp_dataflow_parent_loop_proc_fu_94_ap_start = grp_dataflow_parent_loop_proc_fu_94_ap_start_reg;

assign grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TREADY = (sweep_tx0_0_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TREADY = (sweep_tx0_1_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_send2AIE_3_fu_118_ap_start = grp_send2AIE_3_fu_118_ap_start_reg;

assign grp_send2AIE_3_fu_118_norm_tx0_TREADY = ((norm_tx0_TREADY_int_regslice & ap_CS_fsm_state7) | (norm_tx0_TREADY_int_regslice & ap_CS_fsm_state5));

assign i_14_fu_153_p2 = (i_fu_84 + 4'd1);

assign icmp_ln179_fu_159_p2 = ((i_fu_84 == 4'd8) ? 1'b1 : 1'b0);

assign norm_tx0_TVALID = regslice_both_norm_tx0_V_data_V_U_vld_out;

assign sig_read_fu_88_p2 = syscontrol_0_dout;

assign sweep_tx0_0_TVALID = regslice_both_sweep_tx0_0_V_data_V_U_vld_out;

assign sweep_tx0_0_TVALID_int_regslice = grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_0_TVALID;

assign sweep_tx0_1_TVALID = regslice_both_sweep_tx0_1_V_data_V_U_vld_out;

assign sweep_tx0_1_TVALID_int_regslice = grp_dataflow_parent_loop_proc_fu_94_sweep_tx0_1_TVALID;

endmodule //TopPL_Send
