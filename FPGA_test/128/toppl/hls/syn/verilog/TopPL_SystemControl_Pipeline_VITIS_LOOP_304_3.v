// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TopPL_SystemControl_Pipeline_VITIS_LOOP_304_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        convSet_0_dout,
        convSet_0_num_data_valid,
        convSet_0_fifo_cap,
        convSet_0_empty_n,
        convSet_0_read,
        convSet_1_dout,
        convSet_1_num_data_valid,
        convSet_1_fifo_cap,
        convSet_1_empty_n,
        convSet_1_read,
        p_out,
        p_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] convSet_0_dout;
input  [2:0] convSet_0_num_data_valid;
input  [2:0] convSet_0_fifo_cap;
input   convSet_0_empty_n;
output   convSet_0_read;
input  [31:0] convSet_1_dout;
input  [2:0] convSet_1_num_data_valid;
input  [2:0] convSet_1_fifo_cap;
input   convSet_1_empty_n;
output   convSet_1_read;
output  [31:0] p_out;
output   p_out_ap_vld;

reg ap_idle;
reg convSet_0_read;
reg convSet_1_read;
reg p_out_ap_vld;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln304_reg_791;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    convSet_0_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    convSet_1_blk_n;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] i_11_fu_127_p2;
reg   [6:0] i_11_reg_785;
wire   [0:0] icmp_ln304_fu_133_p2;
reg   [0:0] icmp_ln304_reg_791_pp0_iter1_reg;
reg   [31:0] convSet_0_read_reg_795;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] convSet_1_read_reg_800;
wire   [31:0] conv0_fu_153_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] conv1_fu_160_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire   [63:0] grp_fu_94_p1;
reg   [63:0] dc_reg_817;
reg   [63:0] dc_9_reg_824;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] x_fp_sign_fu_170_p3;
reg   [0:0] x_fp_sign_reg_831;
wire   [51:0] x_fp_sig_5_fu_188_p1;
reg   [51:0] x_fp_sig_5_reg_836;
wire   [0:0] ymaggreater_3_fu_297_p3;
reg   [0:0] ymaggreater_3_reg_841;
wire   [0:0] and_ln18_19_fu_335_p2;
reg   [0:0] and_ln18_19_reg_846;
wire   [0:0] or_ln18_fu_365_p2;
reg   [0:0] or_ln18_reg_851;
wire   [0:0] and_ln18_24_fu_389_p2;
reg   [0:0] and_ln18_24_reg_856;
wire   [63:0] res_10_fu_422_p3;
reg   [63:0] res_10_reg_861;
wire   [31:0] grp_fu_91_p1;
reg   [31:0] conv_reg_866;
reg   [63:0] tmp_reg_878;
reg   [63:0] dc_12_reg_885;
wire   [0:0] x_fp_sign_1_fu_470_p3;
reg   [0:0] x_fp_sign_1_reg_892;
wire   [51:0] x_fp_sig_6_fu_488_p1;
reg   [51:0] x_fp_sig_6_reg_897;
wire   [0:0] ymaggreater_5_fu_594_p3;
reg   [0:0] ymaggreater_5_reg_902;
wire   [0:0] and_ln18_28_fu_632_p2;
reg   [0:0] and_ln18_28_reg_907;
wire   [0:0] or_ln18_4_fu_662_p2;
reg   [0:0] or_ln18_4_reg_912;
wire   [0:0] and_ln18_33_fu_686_p2;
reg   [0:0] and_ln18_33_reg_917;
wire   [63:0] res_15_fu_719_p3;
reg   [63:0] res_15_reg_922;
reg   [31:0] maxConv_reg_927;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg   [6:0] i_5_fu_64;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i;
wire    ap_block_pp0_stage0;
reg   [31:0] empty_fu_68;
reg   [31:0] ap_sig_allocacmp_p_load14;
wire    ap_block_pp0_stage0_01001;
reg   [63:0] grp_fu_91_p0;
wire   [63:0] res_12_fu_434_p3;
wire   [63:0] res_17_fu_731_p3;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage4;
reg   [31:0] grp_fu_94_p0;
wire    ap_block_pp0_stage3;
wire   [63:0] data_fu_167_p1;
wire   [63:0] data_8_fu_192_p1;
wire   [10:0] y_fp_exp_fu_203_p4;
wire   [10:0] x_fp_exp_fu_178_p4;
wire   [10:0] or_ln25_fu_217_p2;
wire   [51:0] y_fp_sig_fu_213_p1;
wire   [51:0] or_ln25_3_fu_229_p2;
wire   [0:0] icmp_ln25_3_fu_235_p2;
wire   [0:0] icmp_ln25_fu_223_p2;
wire   [0:0] icmp_ln18_7_fu_253_p2;
wire   [0:0] icmp_ln18_8_fu_259_p2;
wire   [0:0] ymaggreater_fu_277_p2;
wire   [0:0] xor_ln39_fu_283_p2;
wire   [0:0] y_fp_sign_fu_195_p3;
wire   [0:0] select_ln39_fu_289_p3;
wire   [0:0] and_ln25_3_fu_305_p2;
wire   [0:0] icmp_ln18_9_fu_271_p2;
wire   [0:0] icmp_ln18_fu_247_p2;
wire   [0:0] and_ln18_fu_265_p2;
wire   [0:0] xor_ln25_fu_311_p2;
wire   [0:0] and_ln18_18_fu_323_p2;
wire   [0:0] and_ln18_17_fu_329_p2;
wire   [0:0] xor_ln18_fu_317_p2;
wire   [0:0] and_ln18_20_fu_341_p2;
wire   [0:0] xor_ln18_5_fu_347_p2;
wire   [0:0] and_ln18_21_fu_353_p2;
wire   [0:0] and_ln25_fu_241_p2;
wire   [0:0] and_ln18_22_fu_359_p2;
wire   [0:0] xor_ln18_6_fu_371_p2;
wire   [0:0] or_ln18_3_fu_377_p2;
wire   [0:0] and_ln18_23_fu_383_p2;
wire   [51:0] x_fp_sig_fu_400_p4;
wire   [63:0] t_fu_409_p4;
wire   [63:0] res_9_fu_418_p1;
wire   [63:0] res_fu_395_p3;
wire   [63:0] res_11_fu_429_p3;
wire   [63:0] data_10_fu_458_p1;
wire   [63:0] data_9_fu_467_p1;
wire   [10:0] y_fp_exp_1_fu_500_p4;
wire   [10:0] x_fp_exp_1_fu_478_p4;
wire   [10:0] or_ln25_4_fu_514_p2;
wire   [51:0] y_fp_sig_1_fu_510_p1;
wire   [51:0] or_ln25_5_fu_526_p2;
wire   [0:0] icmp_ln25_5_fu_532_p2;
wire   [0:0] icmp_ln25_4_fu_520_p2;
wire   [0:0] icmp_ln18_11_fu_550_p2;
wire   [0:0] icmp_ln18_12_fu_556_p2;
wire   [0:0] ymaggreater_4_fu_574_p2;
wire   [0:0] xor_ln39_1_fu_580_p2;
wire   [0:0] y_fp_sign_1_fu_492_p3;
wire   [0:0] select_ln39_4_fu_586_p3;
wire   [0:0] and_ln25_5_fu_602_p2;
wire   [0:0] icmp_ln18_13_fu_568_p2;
wire   [0:0] icmp_ln18_10_fu_544_p2;
wire   [0:0] xor_ln18_7_fu_614_p2;
wire   [0:0] and_ln18_25_fu_562_p2;
wire   [0:0] and_ln18_27_fu_620_p2;
wire   [0:0] and_ln18_26_fu_626_p2;
wire   [0:0] xor_ln25_1_fu_608_p2;
wire   [0:0] and_ln18_29_fu_638_p2;
wire   [0:0] and_ln18_30_fu_650_p2;
wire   [0:0] xor_ln18_8_fu_644_p2;
wire   [0:0] and_ln25_4_fu_538_p2;
wire   [0:0] and_ln18_31_fu_656_p2;
wire   [0:0] xor_ln18_9_fu_668_p2;
wire   [0:0] or_ln18_5_fu_674_p2;
wire   [0:0] and_ln18_32_fu_680_p2;
wire   [51:0] x_fp_sig_4_fu_697_p4;
wire   [63:0] t_10_fu_706_p4;
wire   [63:0] res_14_fu_715_p1;
wire   [63:0] res_13_fu_692_p3;
wire   [63:0] res_16_fu_726_p3;
reg    printdouble_ln39_fu_461_ap_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to3;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_5_fu_64 = 7'd0;
#0 empty_fu_68 = 32'd0;
#0 ap_done_reg = 1'b0;
end

TopPL_fptrunc_64ns_32_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_1_no_dsp_1_U4(
    .din0(grp_fu_91_p0),
    .dout(grp_fu_91_p1)
);

TopPL_fpext_32ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_1_no_dsp_1_U5(
    .din0(grp_fu_94_p0),
    .dout(grp_fu_94_p1)
);

TopPL_printdouble printdouble_U6(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .fmt(32'd0),
    .v(data_10_fu_458_p1),
    .ap_ce(printdouble_ln39_fu_461_ap_ce)
);

TopPL_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_68 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_fu_68 <= maxConv_reg_927;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_94_p0 <= ap_sig_allocacmp_p_load14;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_94_p0 <= conv_reg_866;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_94_p0 <= conv1_fu_160_p1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_94_p0 <= conv0_fu_153_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_5_fu_64 <= 7'd0;
    end else if (((icmp_ln304_reg_791 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_5_fu_64 <= i_11_reg_785;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln18_19_reg_846 <= and_ln18_19_fu_335_p2;
        and_ln18_24_reg_856 <= and_ln18_24_fu_389_p2;
        i_11_reg_785 <= i_11_fu_127_p2;
        icmp_ln304_reg_791 <= icmp_ln304_fu_133_p2;
        icmp_ln304_reg_791_pp0_iter1_reg <= icmp_ln304_reg_791;
        or_ln18_reg_851 <= or_ln18_fu_365_p2;
        x_fp_sig_5_reg_836 <= x_fp_sig_5_fu_188_p1;
        x_fp_sign_reg_831 <= data_fu_167_p1[32'd63];
        ymaggreater_3_reg_841 <= ymaggreater_3_fu_297_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        and_ln18_28_reg_907 <= and_ln18_28_fu_632_p2;
        and_ln18_33_reg_917 <= and_ln18_33_fu_686_p2;
        or_ln18_4_reg_912 <= or_ln18_4_fu_662_p2;
        x_fp_sig_6_reg_897 <= x_fp_sig_6_fu_488_p1;
        x_fp_sign_1_reg_892 <= data_9_fu_467_p1[32'd63];
        ymaggreater_5_reg_902 <= ymaggreater_5_fu_594_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        convSet_0_read_reg_795 <= convSet_0_dout;
        convSet_1_read_reg_800 <= convSet_1_dout;
        res_10_reg_861 <= res_10_fu_422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv_reg_866 <= grp_fu_91_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dc_12_reg_885 <= grp_fu_94_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        dc_9_reg_824 <= grp_fu_94_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        dc_reg_817 <= grp_fu_94_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        maxConv_reg_927 <= grp_fu_91_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        res_15_reg_922 <= res_15_fu_719_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_878 <= grp_fu_94_p1;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 7'd0;
    end else begin
        ap_sig_allocacmp_i = i_5_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_p_load14 = maxConv_reg_927;
    end else begin
        ap_sig_allocacmp_p_load14 = empty_fu_68;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        convSet_0_blk_n = convSet_0_empty_n;
    end else begin
        convSet_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        convSet_0_read = 1'b1;
    end else begin
        convSet_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        convSet_1_blk_n = convSet_1_empty_n;
    end else begin
        convSet_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        convSet_1_read = 1'b1;
    end else begin
        convSet_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_91_p0 = res_17_fu_731_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_91_p0 = res_12_fu_434_p3;
    end else begin
        grp_fu_91_p0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln304_reg_791_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        printdouble_ln39_fu_461_ap_ce = 1'b1;
    end else begin
        printdouble_ln39_fu_461_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln18_17_fu_329_p2 = (xor_ln25_fu_311_p2 & and_ln18_18_fu_323_p2);

assign and_ln18_18_fu_323_p2 = (icmp_ln18_fu_247_p2 & and_ln18_fu_265_p2);

assign and_ln18_19_fu_335_p2 = (xor_ln18_fu_317_p2 & and_ln18_17_fu_329_p2);

assign and_ln18_20_fu_341_p2 = (icmp_ln18_8_fu_259_p2 & icmp_ln18_7_fu_253_p2);

assign and_ln18_21_fu_353_p2 = (xor_ln18_fu_317_p2 & xor_ln18_5_fu_347_p2);

assign and_ln18_22_fu_359_p2 = (icmp_ln18_fu_247_p2 & and_ln18_21_fu_353_p2);

assign and_ln18_23_fu_383_p2 = (xor_ln25_fu_311_p2 & or_ln18_3_fu_377_p2);

assign and_ln18_24_fu_389_p2 = (and_ln18_fu_265_p2 & and_ln18_23_fu_383_p2);

assign and_ln18_25_fu_562_p2 = (icmp_ln18_12_fu_556_p2 & icmp_ln18_11_fu_550_p2);

assign and_ln18_26_fu_626_p2 = (and_ln18_27_fu_620_p2 & and_ln18_25_fu_562_p2);

assign and_ln18_27_fu_620_p2 = (xor_ln18_7_fu_614_p2 & icmp_ln18_10_fu_544_p2);

assign and_ln18_28_fu_632_p2 = (xor_ln25_1_fu_608_p2 & and_ln18_26_fu_626_p2);

assign and_ln18_29_fu_638_p2 = (icmp_ln18_12_fu_556_p2 & icmp_ln18_11_fu_550_p2);

assign and_ln18_30_fu_650_p2 = (xor_ln18_7_fu_614_p2 & icmp_ln18_10_fu_544_p2);

assign and_ln18_31_fu_656_p2 = (xor_ln18_8_fu_644_p2 & and_ln18_30_fu_650_p2);

assign and_ln18_32_fu_680_p2 = (xor_ln25_1_fu_608_p2 & or_ln18_5_fu_674_p2);

assign and_ln18_33_fu_686_p2 = (and_ln18_32_fu_680_p2 & and_ln18_25_fu_562_p2);

assign and_ln18_fu_265_p2 = (icmp_ln18_8_fu_259_p2 & icmp_ln18_7_fu_253_p2);

assign and_ln25_3_fu_305_p2 = (icmp_ln25_fu_223_p2 & icmp_ln25_3_fu_235_p2);

assign and_ln25_4_fu_538_p2 = (icmp_ln25_5_fu_532_p2 & icmp_ln25_4_fu_520_p2);

assign and_ln25_5_fu_602_p2 = (icmp_ln25_5_fu_532_p2 & icmp_ln25_4_fu_520_p2);

assign and_ln25_fu_241_p2 = (icmp_ln25_fu_223_p2 & icmp_ln25_3_fu_235_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((convSet_1_empty_n == 1'b0) & (icmp_ln304_reg_791 == 1'd0)) | ((convSet_0_empty_n == 1'b0) & (icmp_ln304_reg_791 == 1'd0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign conv0_fu_153_p1 = convSet_0_read_reg_795;

assign conv1_fu_160_p1 = convSet_1_read_reg_800;

assign data_10_fu_458_p1 = tmp_reg_878;

assign data_8_fu_192_p1 = dc_9_reg_824;

assign data_9_fu_467_p1 = dc_12_reg_885;

assign data_fu_167_p1 = dc_reg_817;

assign i_11_fu_127_p2 = (ap_sig_allocacmp_i + 7'd1);

assign icmp_ln18_10_fu_544_p2 = ((x_fp_exp_1_fu_478_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln18_11_fu_550_p2 = ((y_fp_exp_1_fu_500_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln18_12_fu_556_p2 = ((y_fp_sig_1_fu_510_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_13_fu_568_p2 = ((x_fp_sig_6_fu_488_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_7_fu_253_p2 = ((y_fp_exp_fu_203_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln18_8_fu_259_p2 = ((y_fp_sig_fu_213_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_9_fu_271_p2 = ((x_fp_sig_5_fu_188_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_247_p2 = ((x_fp_exp_fu_178_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln25_3_fu_235_p2 = ((or_ln25_3_fu_229_p2 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_4_fu_520_p2 = ((or_ln25_4_fu_514_p2 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_5_fu_532_p2 = ((or_ln25_5_fu_526_p2 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_223_p2 = ((or_ln25_fu_217_p2 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln304_fu_133_p2 = ((ap_sig_allocacmp_i == 7'd120) ? 1'b1 : 1'b0);

assign or_ln18_3_fu_377_p2 = (xor_ln18_6_fu_371_p2 | icmp_ln18_9_fu_271_p2);

assign or_ln18_4_fu_662_p2 = (and_ln25_4_fu_538_p2 | and_ln18_31_fu_656_p2);

assign or_ln18_5_fu_674_p2 = (xor_ln18_9_fu_668_p2 | icmp_ln18_13_fu_568_p2);

assign or_ln18_fu_365_p2 = (and_ln25_fu_241_p2 | and_ln18_22_fu_359_p2);

assign or_ln25_3_fu_229_p2 = (y_fp_sig_fu_213_p1 | x_fp_sig_5_fu_188_p1);

assign or_ln25_4_fu_514_p2 = (y_fp_exp_1_fu_500_p4 | x_fp_exp_1_fu_478_p4);

assign or_ln25_5_fu_526_p2 = (y_fp_sig_1_fu_510_p1 | x_fp_sig_6_fu_488_p1);

assign or_ln25_fu_217_p2 = (y_fp_exp_fu_203_p4 | x_fp_exp_fu_178_p4);

assign p_out = empty_fu_68;

assign res_10_fu_422_p3 = ((and_ln18_19_reg_846[0:0] == 1'b1) ? res_9_fu_418_p1 : res_fu_395_p3);

assign res_11_fu_429_p3 = ((or_ln18_reg_851[0:0] == 1'b1) ? dc_9_reg_824 : res_10_reg_861);

assign res_12_fu_434_p3 = ((and_ln18_24_reg_856[0:0] == 1'b1) ? dc_reg_817 : res_11_fu_429_p3);

assign res_13_fu_692_p3 = ((ymaggreater_5_reg_902[0:0] == 1'b1) ? tmp_reg_878 : dc_12_reg_885);

assign res_14_fu_715_p1 = t_10_fu_706_p4;

assign res_15_fu_719_p3 = ((and_ln18_28_reg_907[0:0] == 1'b1) ? res_14_fu_715_p1 : res_13_fu_692_p3);

assign res_16_fu_726_p3 = ((or_ln18_4_reg_912[0:0] == 1'b1) ? tmp_reg_878 : res_15_reg_922);

assign res_17_fu_731_p3 = ((and_ln18_33_reg_917[0:0] == 1'b1) ? dc_12_reg_885 : res_16_fu_726_p3);

assign res_9_fu_418_p1 = t_fu_409_p4;

assign res_fu_395_p3 = ((ymaggreater_3_reg_841[0:0] == 1'b1) ? dc_9_reg_824 : dc_reg_817);

assign select_ln39_4_fu_586_p3 = ((x_fp_sign_1_fu_470_p3[0:0] == 1'b1) ? xor_ln39_1_fu_580_p2 : ymaggreater_4_fu_574_p2);

assign select_ln39_fu_289_p3 = ((x_fp_sign_fu_170_p3[0:0] == 1'b1) ? xor_ln39_fu_283_p2 : ymaggreater_fu_277_p2);

assign t_10_fu_706_p4 = {{{x_fp_sign_1_reg_892}, {11'd2047}}, {x_fp_sig_4_fu_697_p4}};

assign t_fu_409_p4 = {{{x_fp_sign_reg_831}, {11'd2047}}, {x_fp_sig_fu_400_p4}};

assign x_fp_exp_1_fu_478_p4 = {{data_9_fu_467_p1[62:52]}};

assign x_fp_exp_fu_178_p4 = {{data_fu_167_p1[62:52]}};

assign x_fp_sig_4_fu_697_p4 = {|(1'd1), x_fp_sig_6_reg_897[51 - 1:0]};

assign x_fp_sig_5_fu_188_p1 = data_fu_167_p1[51:0];

assign x_fp_sig_6_fu_488_p1 = data_9_fu_467_p1[51:0];

assign x_fp_sig_fu_400_p4 = {|(1'd1), x_fp_sig_5_reg_836[51 - 1:0]};

assign x_fp_sign_1_fu_470_p3 = data_9_fu_467_p1[32'd63];

assign x_fp_sign_fu_170_p3 = data_fu_167_p1[32'd63];

assign xor_ln18_5_fu_347_p2 = (1'd1 ^ and_ln18_20_fu_341_p2);

assign xor_ln18_6_fu_371_p2 = (icmp_ln18_fu_247_p2 ^ 1'd1);

assign xor_ln18_7_fu_614_p2 = (icmp_ln18_13_fu_568_p2 ^ 1'd1);

assign xor_ln18_8_fu_644_p2 = (1'd1 ^ and_ln18_29_fu_638_p2);

assign xor_ln18_9_fu_668_p2 = (icmp_ln18_10_fu_544_p2 ^ 1'd1);

assign xor_ln18_fu_317_p2 = (icmp_ln18_9_fu_271_p2 ^ 1'd1);

assign xor_ln25_1_fu_608_p2 = (1'd1 ^ and_ln25_5_fu_602_p2);

assign xor_ln25_fu_311_p2 = (1'd1 ^ and_ln25_3_fu_305_p2);

assign xor_ln39_1_fu_580_p2 = (ymaggreater_4_fu_574_p2 ^ 1'd1);

assign xor_ln39_fu_283_p2 = (ymaggreater_fu_277_p2 ^ 1'd1);

assign y_fp_exp_1_fu_500_p4 = {{data_10_fu_458_p1[62:52]}};

assign y_fp_exp_fu_203_p4 = {{data_8_fu_192_p1[62:52]}};

assign y_fp_sig_1_fu_510_p1 = data_10_fu_458_p1[51:0];

assign y_fp_sig_fu_213_p1 = data_8_fu_192_p1[51:0];

assign y_fp_sign_1_fu_492_p3 = data_10_fu_458_p1[32'd63];

assign y_fp_sign_fu_195_p3 = data_8_fu_192_p1[32'd63];

assign ymaggreater_3_fu_297_p3 = ((y_fp_sign_fu_195_p3[0:0] == 1'b1) ? select_ln39_fu_289_p3 : ymaggreater_fu_277_p2);

assign ymaggreater_4_fu_574_p2 = (($signed(data_9_fu_467_p1) < $signed(data_10_fu_458_p1)) ? 1'b1 : 1'b0);

assign ymaggreater_5_fu_594_p3 = ((y_fp_sign_1_fu_492_p3[0:0] == 1'b1) ? select_ln39_4_fu_586_p3 : ymaggreater_4_fu_574_p2);

assign ymaggreater_fu_277_p2 = (($signed(data_fu_167_p1) < $signed(data_8_fu_192_p1)) ? 1'b1 : 1'b0);

endmodule //TopPL_SystemControl_Pipeline_VITIS_LOOP_304_3
