/********************************************* Disclaimer *********************************************/
/* This file is generated by aiecompiler . */
/* Changes to this file may cause incorrect behavior and will be lost if aiecompiler is invoked again.*/

#include <iostream>
#include "adf/adf_api/AIEControlConfig.h"


/************************** Graph Configurations  *****************************/

  adf::GraphConfig GraphConfigurations[] = {
  //{id, name, graphLoadElfFunc, graphInitFunc, graphDebugHalt, coreColumns, coreRows, iterMemColumns, iterMemRows, iterMemAddrs, triggered, plKernelInstanceNames, plAxiLiteModes, plDriverStartFuncs, plDriverCheckIPDoneFuncs}
    {2, "topNormGraph1", nullptr, nullptr, nullptr, {0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 2, 3, 4, 5, 6, 7}, {0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 1, 3, 3, 5, 7, 7}, {0x4224, 0x6224, 0x4, 0x6444, 0x224, 0x15c4, 0x35c4, 0x4}, {0, 0, 0, 0, 0, 0, 0, 0}, {}, {}, {}, {},  }, 
    {0, "topSweepGraph1", nullptr, nullptr, nullptr, {1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 19, 20, 21, 22, 23, 24, 25, 26}, {0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 1, 0, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 3, 3, 3, 3, 3, 2, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 4, 6, 6, 6, 6, 6, 6, 5, 7, 7, 7, 8, 7, 7, 7, 8, 9, 8, 9, 8, 8, 7, 10, 10, 10, 9, 10, 9, 10, 12, 11, 11, 10, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 15, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 17, 16, 16, 16, 16, 16, 16, 17, 17, 18, 17, 18, 17, 18, 19, 20, 20, 22, 23, 24, 24, 26}, {0, 1, 2, 3, 4, 6, 6, 0, 2, 2, 4, 5, 6, 6, 0, 1, 3, 4, 5, 6, 6, 1, 2, 3, 4, 5, 6, 6, 1, 2, 3, 4, 5, 6, 6, 1, 2, 3, 4, 5, 6, 6, 1, 2, 3, 3, 5, 6, 7, 0, 1, 2, 3, 5, 6, 6, 0, 1, 2, 4, 5, 6, 6, 1, 1, 2, 4, 4, 5, 6, 0, 1, 2, 3, 4, 5, 7, 0, 1, 2, 3, 4, 5, 7, 1, 1, 2, 3, 4, 5, 7, 0, 1, 2, 3, 4, 5, 6, 1, 1, 2, 3, 4, 5, 6, 1, 1, 3, 4, 5, 5, 7, 1, 1, 0, 0, 0, 0, 0, 0}, {0x22c4, 0x17e4, 0x2364, 0x224, 0x2364, 0x37e4, 0x17e4, 0x22c4, 0x224, 0x224, 0x224, 0x224, 0x4, 0x4004, 0x22c4, 0x224, 0x224, 0x224, 0x224, 0x224, 0x2004, 0x224, 0x224, 0x224, 0x224, 0x224, 0x37e4, 0x17e4, 0x224, 0x224, 0x224, 0x224, 0x224, 0x4, 0x4004, 0x224, 0x224, 0x224, 0x224, 0x224, 0x224, 0x2004, 0x17e4, 0x224, 0x224, 0x224, 0x224, 0x4, 0x224, 0x2364, 0x2364, 0x224, 0x2364, 0x224, 0x224, 0x2004, 0x224, 0x224, 0x664, 0x2364, 0x224, 0x2364, 0x224, 0x4, 0x224, 0x224, 0x224, 0x224, 0x224, 0x224, 0x224, 0x2004, 0x224, 0x224, 0x224, 0x224, 0x6004, 0x224, 0x224, 0x224, 0x224, 0x224, 0x224, 0x6004, 0x2004, 0x224, 0x224, 0x224, 0x224, 0x224, 0x6004, 0x224, 0x4, 0x224, 0x224, 0x224, 0x224, 0x224, 0x17e4, 0x224, 0x224, 0x224, 0x224, 0x224, 0x224, 0x4004, 0x37e4, 0x2364, 0x224, 0x2364, 0x224, 0x6004, 0x224, 0x17e4, 0x4, 0x4, 0x17e4, 0x4, 0x2004, 0x6004}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}, {}, {}, {},  }, 
  };
  const int NUM_GRAPH = 2;

/************************** PLIO Configurations  *****************************/

  adf::PLIOConfig PLIOConfigurations[] = {
  //{id, name, loginal_name, shim_column, slaveOrMaster, streamId}
    {0, "topSweepGraph1.in[0]", "1_sweep_in_0", 6, 0, 0},
    {1, "topSweepGraph1.out[0]", "1_sweep_out_0", 22, 1, 2},
    {2, "topSweepGraph1.in[1]", "1_sweep_in_1", 7, 0, 0},
    {3, "topSweepGraph1.out[1]", "1_sweep_out_1", 22, 1, 4},
    {4, "topNormGraph1.in[0]", "1_norm_in_0", 6, 0, 4},
    {5, "topNormGraph1.out[0]", "1_norm_out_0", 6, 1, 0},
  };
  const int NUM_PLIO = 6;


/************************** ADF API initializer *****************************/

  class InitializeAIEControlXRT
  {
  public:
    InitializeAIEControlXRT()
    {
      std::cout<<"Initializing ADF API..."<<std::endl;
#ifdef __EXCLUDE_PL_CONTROL__
      bool exclude_pl_control = true;
#else
      bool exclude_pl_control = false;
#endif
      adf::initializeConfigurations(nullptr, 0, 0, 0,
                                    GraphConfigurations, NUM_GRAPH,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    PLIOConfigurations, NUM_PLIO,
                                    nullptr, 0, 0, nullptr,
                                    false, exclude_pl_control, false, nullptr,
                                    true, 2);

    }
  } initAIEControlXRT;



#if !defined(__CDO__) && !defined(__AIECONTROLCODE__)

// Kernel Stub Definition
  template<int ROW> void normalize(adf::input_buffer<float, adf::extents<1 + ROW>> &__restrict in, adf::output_buffer<float, adf::extents<1 + ROW>> &__restrict out) { /* Stub */ } 
  template<int ROW> void orthogonalize(adf::input_buffer<float, adf::extents<1 + ROW>> &in0, adf::input_buffer<float, adf::extents<1 + ROW>> &in1, adf::output_buffer<float, adf::extents<1 + ROW>> &out0, adf::output_buffer<float, adf::extents<1 + ROW>> &out1) { /* Stub */ } 
  template void normalize<128>(adf::io_buffer<float, adf::direction::in, adf::io_buffer_config<adf::extents<129>>> &__restrict,adf::io_buffer<float, adf::direction::out, adf::io_buffer_config<adf::extents<129>>> &__restrict); /* explicit template instantiation */ 
  template void orthogonalize<128>(adf::io_buffer<float, adf::direction::in, adf::io_buffer_config<adf::extents<129>>> &,adf::io_buffer<float, adf::direction::in, adf::io_buffer_config<adf::extents<129>>> &,adf::io_buffer<float, adf::direction::out, adf::io_buffer_config<adf::extents<129>>> &,adf::io_buffer<float, adf::direction::out, adf::io_buffer_config<adf::extents<129>>> &); /* explicit template instantiation */ 
#endif
